// -*- C++ -*-
// This is a header file generated with the command:
// makeCMS3ClassFiles("/home/users/isuarez/MCStudies/T14t_mGluino1200_mLSP800_FullSim_0.root", "t", "StopCMS3", "", "")

#ifndef StopCMS3_H
#define StopCMS3_H

#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector< ROOT::Math::PxPyPzE4D<float> > LorentzVector;

using namespace std; 
class StopCMS3 {
 private: 
 protected: 
  unsigned int index;
  unsigned int run_;
  TBranch *run_branch;
  bool     run_isLoaded;
  unsigned int ls_;
  TBranch *ls_branch;
  bool     ls_isLoaded;
  unsigned int evt_;
  TBranch *evt_branch;
  bool     evt_isLoaded;
  int      nvtxs_;
  TBranch *nvtxs_branch;
  bool     nvtxs_isLoaded;
  int      year_;
  TBranch *year_branch;
  bool     year_isLoaded;
  int      sampver_;
  TBranch *sampver_branch;
  bool     sampver_isLoaded;
  int      pu_nvtxs_;
  TBranch *pu_nvtxs_branch;
  bool     pu_nvtxs_isLoaded;
  float    pfmet_;
  TBranch *pfmet_branch;
  bool     pfmet_isLoaded;
  float    pfmet_phi_;
  TBranch *pfmet_phi_branch;
  bool     pfmet_phi_isLoaded;
  float    pfmet_jup_;
  TBranch *pfmet_jup_branch;
  bool     pfmet_jup_isLoaded;
  float    pfmet_phi_jup_;
  TBranch *pfmet_phi_jup_branch;
  bool     pfmet_phi_jup_isLoaded;
  float    pfmet_jdown_;
  TBranch *pfmet_jdown_branch;
  bool     pfmet_jdown_isLoaded;
  float    pfmet_phi_jdown_;
  TBranch *pfmet_phi_jdown_branch;
  bool     pfmet_phi_jdown_isLoaded;
  float    pfmet_rl_;
  TBranch *pfmet_rl_branch;
  bool     pfmet_rl_isLoaded;
  float    pfmet_phi_rl_;
  TBranch *pfmet_phi_rl_branch;
  bool     pfmet_phi_rl_isLoaded;
  float    pfmet_rl_jup_;
  TBranch *pfmet_rl_jup_branch;
  bool     pfmet_rl_jup_isLoaded;
  float    pfmet_phi_rl_jup_;
  TBranch *pfmet_phi_rl_jup_branch;
  bool     pfmet_phi_rl_jup_isLoaded;
  float    pfmet_rl_jdown_;
  TBranch *pfmet_rl_jdown_branch;
  bool     pfmet_rl_jdown_isLoaded;
  float    pfmet_phi_rl_jdown_;
  TBranch *pfmet_phi_rl_jdown_branch;
  bool     pfmet_phi_rl_jdown_isLoaded;
  float    pfmet_uncorr_;
  TBranch *pfmet_uncorr_branch;
  bool     pfmet_uncorr_isLoaded;
  float    pfmet_uncorr_phi_;
  TBranch *pfmet_uncorr_phi_branch;
  bool     pfmet_uncorr_phi_isLoaded;
  float    pfmet_original_;
  TBranch *pfmet_original_branch;
  bool     pfmet_original_isLoaded;
  float    pfmet_original_phi_;
  TBranch *pfmet_original_phi_branch;
  bool     pfmet_original_phi_isLoaded;
  float    scale1fb_;
  TBranch *scale1fb_branch;
  bool     scale1fb_isLoaded;
  float    xsec_;
  TBranch *xsec_branch;
  bool     xsec_isLoaded;
  float    xsec_uncert_;
  TBranch *xsec_uncert_branch;
  bool     xsec_uncert_isLoaded;
  float    kfactor_;
  TBranch *kfactor_branch;
  bool     kfactor_isLoaded;
  float    pu_ntrue_;
  TBranch *pu_ntrue_branch;
  bool     pu_ntrue_isLoaded;
  int      ngoodleps_;
  TBranch *ngoodleps_branch;
  bool     ngoodleps_isLoaded;
  int      nlooseleps_;
  TBranch *nlooseleps_branch;
  bool     nlooseleps_isLoaded;
  int      nvetoleps_;
  TBranch *nvetoleps_branch;
  bool     nvetoleps_isLoaded;
  bool     is_data_;
  TBranch *is_data_branch;
  bool     is_data_isLoaded;
  string *dataset_;
  TBranch *dataset_branch;
  bool     dataset_isLoaded;
  string *filename_;
  TBranch *filename_branch;
  bool     filename_isLoaded;
  string *cms3tag_;
  TBranch *cms3tag_branch;
  bool     cms3tag_isLoaded;
  unsigned int nEvents_;
  TBranch *nEvents_branch;
  bool     nEvents_isLoaded;
  unsigned int nEvents_goodvtx_;
  TBranch *nEvents_goodvtx_branch;
  bool     nEvents_goodvtx_isLoaded;
  unsigned int nEvents_MET30_;
  TBranch *nEvents_MET30_branch;
  bool     nEvents_MET30_isLoaded;
  unsigned int nEvents_1goodlep_;
  TBranch *nEvents_1goodlep_branch;
  bool     nEvents_1goodlep_isLoaded;
  unsigned int nEvents_2goodjets_;
  TBranch *nEvents_2goodjets_branch;
  bool     nEvents_2goodjets_isLoaded;
  int      is0lep_;
  TBranch *is0lep_branch;
  bool     is0lep_isLoaded;
  int      is1lep_;
  TBranch *is1lep_branch;
  bool     is1lep_isLoaded;
  int      is2lep_;
  TBranch *is2lep_branch;
  bool     is2lep_isLoaded;
  int      isZtoNuNu_;
  TBranch *isZtoNuNu_branch;
  bool     isZtoNuNu_isLoaded;
  int      is1lepFromW_;
  TBranch *is1lepFromW_branch;
  bool     is1lepFromW_isLoaded;
  int      is1lepFromTop_;
  TBranch *is1lepFromTop_branch;
  bool     is1lepFromTop_isLoaded;
  float    MT2W_;
  TBranch *MT2W_branch;
  bool     MT2W_isLoaded;
  float    MT2W_rl_;
  TBranch *MT2W_rl_branch;
  bool     MT2W_rl_isLoaded;
  float    MT2_ll_;
  TBranch *MT2_ll_branch;
  bool     MT2_ll_isLoaded;
  float    mindphi_met_j1_j2_;
  TBranch *mindphi_met_j1_j2_branch;
  bool     mindphi_met_j1_j2_isLoaded;
  float    mindphi_met_j1_j2_rl_;
  TBranch *mindphi_met_j1_j2_rl_branch;
  bool     mindphi_met_j1_j2_rl_isLoaded;
  float    mt_met_lep_;
  TBranch *mt_met_lep_branch;
  bool     mt_met_lep_isLoaded;
  float    mt_met_lep_rl_;
  TBranch *mt_met_lep_rl_branch;
  bool     mt_met_lep_rl_isLoaded;
  float    MT2W_jup_;
  TBranch *MT2W_jup_branch;
  bool     MT2W_jup_isLoaded;
  float    MT2W_rl_jup_;
  TBranch *MT2W_rl_jup_branch;
  bool     MT2W_rl_jup_isLoaded;
  float    MT2_ll_jup_;
  TBranch *MT2_ll_jup_branch;
  bool     MT2_ll_jup_isLoaded;
  float    mindphi_met_j1_j2_jup_;
  TBranch *mindphi_met_j1_j2_jup_branch;
  bool     mindphi_met_j1_j2_jup_isLoaded;
  float    mindphi_met_j1_j2_rl_jup_;
  TBranch *mindphi_met_j1_j2_rl_jup_branch;
  bool     mindphi_met_j1_j2_rl_jup_isLoaded;
  float    mt_met_lep_jup_;
  TBranch *mt_met_lep_jup_branch;
  bool     mt_met_lep_jup_isLoaded;
  float    mt_met_lep_rl_jup_;
  TBranch *mt_met_lep_rl_jup_branch;
  bool     mt_met_lep_rl_jup_isLoaded;
  float    MT2W_jdown_;
  TBranch *MT2W_jdown_branch;
  bool     MT2W_jdown_isLoaded;
  float    MT2W_rl_jdown_;
  TBranch *MT2W_rl_jdown_branch;
  bool     MT2W_rl_jdown_isLoaded;
  float    MT2_ll_jdown_;
  TBranch *MT2_ll_jdown_branch;
  bool     MT2_ll_jdown_isLoaded;
  float    mindphi_met_j1_j2_jdown_;
  TBranch *mindphi_met_j1_j2_jdown_branch;
  bool     mindphi_met_j1_j2_jdown_isLoaded;
  float    mindphi_met_j1_j2_rl_jdown_;
  TBranch *mindphi_met_j1_j2_rl_jdown_branch;
  bool     mindphi_met_j1_j2_rl_jdown_isLoaded;
  float    mt_met_lep_jdown_;
  TBranch *mt_met_lep_jdown_branch;
  bool     mt_met_lep_jdown_isLoaded;
  float    mt_met_lep_rl_jdown_;
  TBranch *mt_met_lep_rl_jdown_branch;
  bool     mt_met_lep_rl_jdown_isLoaded;
  float    hadronic_top_chi2_;
  TBranch *hadronic_top_chi2_branch;
  bool     hadronic_top_chi2_isLoaded;
  float    ak4pfjets_rho_;
  TBranch *ak4pfjets_rho_branch;
  bool     ak4pfjets_rho_isLoaded;
  float    pdf_up_weight_;
  TBranch *pdf_up_weight_branch;
  bool     pdf_up_weight_isLoaded;
  float    pdf_down_weight_;
  TBranch *pdf_down_weight_branch;
  bool     pdf_down_weight_isLoaded;
  vector<string> *genweightsID_;
  TBranch *genweightsID_branch;
  bool     genweightsID_isLoaded;
  int      ngenweights_;
  TBranch *ngenweights_branch;
  bool     ngenweights_isLoaded;
  vector<float> *genweights_;
  TBranch *genweights_branch;
  bool     genweights_isLoaded;
  float    weight_Q2_up_;
  TBranch *weight_Q2_up_branch;
  bool     weight_Q2_up_isLoaded;
  float    weight_Q2_down_;
  TBranch *weight_Q2_down_branch;
  bool     weight_Q2_down_isLoaded;
  float    weight_muF_up_;
  TBranch *weight_muF_up_branch;
  bool     weight_muF_up_isLoaded;
  float    weight_muF_down_;
  TBranch *weight_muF_down_branch;
  bool     weight_muF_down_isLoaded;
  float    weight_muR_up_;
  TBranch *weight_muR_up_branch;
  bool     weight_muR_up_isLoaded;
  float    weight_muR_down_;
  TBranch *weight_muR_down_branch;
  bool     weight_muR_down_isLoaded;
  float    weight_alphas_up_;
  TBranch *weight_alphas_up_branch;
  bool     weight_alphas_up_isLoaded;
  float    weight_alphas_down_;
  TBranch *weight_alphas_down_branch;
  bool     weight_alphas_down_isLoaded;
  float    weight_btagsf_;
  TBranch *weight_btagsf_branch;
  bool     weight_btagsf_isLoaded;
  float    weight_btagsf_heavy_UP_;
  TBranch *weight_btagsf_heavy_UP_branch;
  bool     weight_btagsf_heavy_UP_isLoaded;
  float    weight_btagsf_light_UP_;
  TBranch *weight_btagsf_light_UP_branch;
  bool     weight_btagsf_light_UP_isLoaded;
  float    weight_btagsf_heavy_DN_;
  TBranch *weight_btagsf_heavy_DN_branch;
  bool     weight_btagsf_heavy_DN_isLoaded;
  float    weight_btagsf_light_DN_;
  TBranch *weight_btagsf_light_DN_branch;
  bool     weight_btagsf_light_DN_isLoaded;
  float    weight_btagsf_fastsim_UP_;
  TBranch *weight_btagsf_fastsim_UP_branch;
  bool     weight_btagsf_fastsim_UP_isLoaded;
  float    weight_btagsf_fastsim_DN_;
  TBranch *weight_btagsf_fastsim_DN_branch;
  bool     weight_btagsf_fastsim_DN_isLoaded;
  float    weight_analysisbtagsf_;
  TBranch *weight_analysisbtagsf_branch;
  bool     weight_analysisbtagsf_isLoaded;
  float    weight_analysisbtagsf_heavy_UP_;
  TBranch *weight_analysisbtagsf_heavy_UP_branch;
  bool     weight_analysisbtagsf_heavy_UP_isLoaded;
  float    weight_analysisbtagsf_light_UP_;
  TBranch *weight_analysisbtagsf_light_UP_branch;
  bool     weight_analysisbtagsf_light_UP_isLoaded;
  float    weight_analysisbtagsf_heavy_DN_;
  TBranch *weight_analysisbtagsf_heavy_DN_branch;
  bool     weight_analysisbtagsf_heavy_DN_isLoaded;
  float    weight_analysisbtagsf_light_DN_;
  TBranch *weight_analysisbtagsf_light_DN_branch;
  bool     weight_analysisbtagsf_light_DN_isLoaded;
  float    weight_analysisbtagsf_fastsim_UP_;
  TBranch *weight_analysisbtagsf_fastsim_UP_branch;
  bool     weight_analysisbtagsf_fastsim_UP_isLoaded;
  float    weight_analysisbtagsf_fastsim_DN_;
  TBranch *weight_analysisbtagsf_fastsim_DN_branch;
  bool     weight_analysisbtagsf_fastsim_DN_isLoaded;
  float    weight_tightbtagsf_;
  TBranch *weight_tightbtagsf_branch;
  bool     weight_tightbtagsf_isLoaded;
  float    weight_tightbtagsf_heavy_UP_;
  TBranch *weight_tightbtagsf_heavy_UP_branch;
  bool     weight_tightbtagsf_heavy_UP_isLoaded;
  float    weight_tightbtagsf_light_UP_;
  TBranch *weight_tightbtagsf_light_UP_branch;
  bool     weight_tightbtagsf_light_UP_isLoaded;
  float    weight_tightbtagsf_heavy_DN_;
  TBranch *weight_tightbtagsf_heavy_DN_branch;
  bool     weight_tightbtagsf_heavy_DN_isLoaded;
  float    weight_tightbtagsf_light_DN_;
  TBranch *weight_tightbtagsf_light_DN_branch;
  bool     weight_tightbtagsf_light_DN_isLoaded;
  float    weight_tightbtagsf_fastsim_UP_;
  TBranch *weight_tightbtagsf_fastsim_UP_branch;
  bool     weight_tightbtagsf_fastsim_UP_isLoaded;
  float    weight_tightbtagsf_fastsim_DN_;
  TBranch *weight_tightbtagsf_fastsim_DN_branch;
  bool     weight_tightbtagsf_fastsim_DN_isLoaded;
  float    weight_loosebtagsf_;
  TBranch *weight_loosebtagsf_branch;
  bool     weight_loosebtagsf_isLoaded;
  float    weight_loosebtagsf_heavy_UP_;
  TBranch *weight_loosebtagsf_heavy_UP_branch;
  bool     weight_loosebtagsf_heavy_UP_isLoaded;
  float    weight_loosebtagsf_light_UP_;
  TBranch *weight_loosebtagsf_light_UP_branch;
  bool     weight_loosebtagsf_light_UP_isLoaded;
  float    weight_loosebtagsf_heavy_DN_;
  TBranch *weight_loosebtagsf_heavy_DN_branch;
  bool     weight_loosebtagsf_heavy_DN_isLoaded;
  float    weight_loosebtagsf_light_DN_;
  TBranch *weight_loosebtagsf_light_DN_branch;
  bool     weight_loosebtagsf_light_DN_isLoaded;
  float    weight_loosebtagsf_fastsim_UP_;
  TBranch *weight_loosebtagsf_fastsim_UP_branch;
  bool     weight_loosebtagsf_fastsim_UP_isLoaded;
  float    weight_loosebtagsf_fastsim_DN_;
  TBranch *weight_loosebtagsf_fastsim_DN_branch;
  bool     weight_loosebtagsf_fastsim_DN_isLoaded;
  float    weight_lepSF_;
  TBranch *weight_lepSF_branch;
  bool     weight_lepSF_isLoaded;
  float    weight_lepSF_up_;
  TBranch *weight_lepSF_up_branch;
  bool     weight_lepSF_up_isLoaded;
  float    weight_lepSF_down_;
  TBranch *weight_lepSF_down_branch;
  bool     weight_lepSF_down_isLoaded;
  float    weight_vetoLepSF_;
  TBranch *weight_vetoLepSF_branch;
  bool     weight_vetoLepSF_isLoaded;
  float    weight_vetoLepSF_up_;
  TBranch *weight_vetoLepSF_up_branch;
  bool     weight_vetoLepSF_up_isLoaded;
  float    weight_vetoLepSF_down_;
  TBranch *weight_vetoLepSF_down_branch;
  bool     weight_vetoLepSF_down_isLoaded;
  float    weight_lepSF_fastSim_;
  TBranch *weight_lepSF_fastSim_branch;
  bool     weight_lepSF_fastSim_isLoaded;
  float    weight_lepSF_fastSim_up_;
  TBranch *weight_lepSF_fastSim_up_branch;
  bool     weight_lepSF_fastSim_up_isLoaded;
  float    weight_lepSF_fastSim_down_;
  TBranch *weight_lepSF_fastSim_down_branch;
  bool     weight_lepSF_fastSim_down_isLoaded;
  float    weight_ISR_;
  TBranch *weight_ISR_branch;
  bool     weight_ISR_isLoaded;
  float    weight_ISRup_;
  TBranch *weight_ISRup_branch;
  bool     weight_ISRup_isLoaded;
  float    weight_ISRdown_;
  TBranch *weight_ISRdown_branch;
  bool     weight_ISRdown_isLoaded;
  float    weight_PU_;
  TBranch *weight_PU_branch;
  bool     weight_PU_isLoaded;
  float    weight_PUup_;
  TBranch *weight_PUup_branch;
  bool     weight_PUup_isLoaded;
  float    weight_PUdown_;
  TBranch *weight_PUdown_branch;
  bool     weight_PUdown_isLoaded;
  float    weight_ISRnjets_;
  TBranch *weight_ISRnjets_branch;
  bool     weight_ISRnjets_isLoaded;
  float    weight_ISRnjets_UP_;
  TBranch *weight_ISRnjets_UP_branch;
  bool     weight_ISRnjets_UP_isLoaded;
  float    weight_ISRnjets_DN_;
  TBranch *weight_ISRnjets_DN_branch;
  bool     weight_ISRnjets_DN_isLoaded;
  float    weight_L1prefire_;
  TBranch *weight_L1prefire_branch;
  bool     weight_L1prefire_isLoaded;
  float    weight_L1prefire_UP_;
  TBranch *weight_L1prefire_UP_branch;
  bool     weight_L1prefire_UP_isLoaded;
  float    weight_L1prefire_DN_;
  TBranch *weight_L1prefire_DN_branch;
  bool     weight_L1prefire_DN_isLoaded;
  int      NISRjets_;
  TBranch *NISRjets_branch;
  bool     NISRjets_isLoaded;
  int      NnonISRjets_;
  TBranch *NnonISRjets_branch;
  bool     NnonISRjets_isLoaded;
  vector<string> *sparms_names_;
  TBranch *sparms_names_branch;
  bool     sparms_names_isLoaded;
  vector<float> *sparms_values_;
  TBranch *sparms_values_branch;
  bool     sparms_values_isLoaded;
  int      sparms_subProcessId_;
  TBranch *sparms_subProcessId_branch;
  bool     sparms_subProcessId_isLoaded;
  float    mass_lsp_;
  TBranch *mass_lsp_branch;
  bool     mass_lsp_isLoaded;
  float    mass_chargino_;
  TBranch *mass_chargino_branch;
  bool     mass_chargino_isLoaded;
  float    mass_stop_;
  TBranch *mass_stop_branch;
  bool     mass_stop_isLoaded;
  float    mass_gluino_;
  TBranch *mass_gluino_branch;
  bool     mass_gluino_isLoaded;
  float    genmet_;
  TBranch *genmet_branch;
  bool     genmet_isLoaded;
  float    genmet_phi_;
  TBranch *genmet_phi_branch;
  bool     genmet_phi_isLoaded;
  float    nupt_;
  TBranch *nupt_branch;
  bool     nupt_isLoaded;
  float    genht_;
  TBranch *genht_branch;
  bool     genht_isLoaded;
  bool     PassTrackVeto_;
  TBranch *PassTrackVeto_branch;
  bool     PassTrackVeto_isLoaded;
  bool     PassTauVeto_;
  TBranch *PassTauVeto_branch;
  bool     PassTauVeto_isLoaded;
  float    topness_;
  TBranch *topness_branch;
  bool     topness_isLoaded;
  float    topnessMod_;
  TBranch *topnessMod_branch;
  bool     topnessMod_isLoaded;
  float    topnessMod_rl_;
  TBranch *topnessMod_rl_branch;
  bool     topnessMod_rl_isLoaded;
  float    topnessMod_jup_;
  TBranch *topnessMod_jup_branch;
  bool     topnessMod_jup_isLoaded;
  float    topnessMod_rl_jup_;
  TBranch *topnessMod_rl_jup_branch;
  bool     topnessMod_rl_jup_isLoaded;
  float    topnessMod_jdown_;
  TBranch *topnessMod_jdown_branch;
  bool     topnessMod_jdown_isLoaded;
  float    topnessMod_rl_jdown_;
  TBranch *topnessMod_rl_jdown_branch;
  bool     topnessMod_rl_jdown_isLoaded;
  float    Mlb_closestb_;
  TBranch *Mlb_closestb_branch;
  bool     Mlb_closestb_isLoaded;
  float    Mlb_lead_bdiscr_;
  TBranch *Mlb_lead_bdiscr_branch;
  bool     Mlb_lead_bdiscr_isLoaded;
  float    Mlb_closestb_jup_;
  TBranch *Mlb_closestb_jup_branch;
  bool     Mlb_closestb_jup_isLoaded;
  float    Mlb_lead_bdiscr_jup_;
  TBranch *Mlb_lead_bdiscr_jup_branch;
  bool     Mlb_lead_bdiscr_jup_isLoaded;
  float    Mlb_closestb_jdown_;
  TBranch *Mlb_closestb_jdown_branch;
  bool     Mlb_closestb_jdown_isLoaded;
  float    Mlb_lead_bdiscr_jdown_;
  TBranch *Mlb_lead_bdiscr_jdown_branch;
  bool     Mlb_lead_bdiscr_jdown_isLoaded;
  int      HLT_SingleEl_;
  TBranch *HLT_SingleEl_branch;
  bool     HLT_SingleEl_isLoaded;
  int      HLT_SingleMu_;
  TBranch *HLT_SingleMu_branch;
  bool     HLT_SingleMu_isLoaded;
  int      HLT_MET_;
  TBranch *HLT_MET_branch;
  bool     HLT_MET_isLoaded;
  int      HLT_MET_MHT_;
  TBranch *HLT_MET_MHT_branch;
  bool     HLT_MET_MHT_isLoaded;
  int      HLT_MET100_MHT100_;
  TBranch *HLT_MET100_MHT100_branch;
  bool     HLT_MET100_MHT100_isLoaded;
  int      HLT_MET110_MHT110_;
  TBranch *HLT_MET110_MHT110_branch;
  bool     HLT_MET110_MHT110_isLoaded;
  int      HLT_MET120_MHT120_;
  TBranch *HLT_MET120_MHT120_branch;
  bool     HLT_MET120_MHT120_isLoaded;
  int      HLT_MET130_MHT130_;
  TBranch *HLT_MET130_MHT130_branch;
  bool     HLT_MET130_MHT130_isLoaded;
  int      HLT_PFHT_unprescaled_;
  TBranch *HLT_PFHT_unprescaled_branch;
  bool     HLT_PFHT_unprescaled_isLoaded;
  int      HLT_PFHT_prescaled_;
  TBranch *HLT_PFHT_prescaled_branch;
  bool     HLT_PFHT_prescaled_isLoaded;
  int      HLT_AK8Jet_unprescaled_;
  TBranch *HLT_AK8Jet_unprescaled_branch;
  bool     HLT_AK8Jet_unprescaled_isLoaded;
  int      HLT_AK8Jet_prescaled_;
  TBranch *HLT_AK8Jet_prescaled_branch;
  bool     HLT_AK8Jet_prescaled_isLoaded;
  int      HLT_CaloJet500_NoJetID_;
  TBranch *HLT_CaloJet500_NoJetID_branch;
  bool     HLT_CaloJet500_NoJetID_isLoaded;
  int      HLT_DiEl_;
  TBranch *HLT_DiEl_branch;
  bool     HLT_DiEl_isLoaded;
  int      HLT_DiMu_;
  TBranch *HLT_DiMu_branch;
  bool     HLT_DiMu_isLoaded;
  int      HLT_MuE_;
  TBranch *HLT_MuE_branch;
  bool     HLT_MuE_isLoaded;
  int      nPhotons_;
  TBranch *nPhotons_branch;
  bool     nPhotons_isLoaded;
  int      ph_ngoodjets_;
  TBranch *ph_ngoodjets_branch;
  bool     ph_ngoodjets_isLoaded;
  int      ph_ngoodbtags_;
  TBranch *ph_ngoodbtags_branch;
  bool     ph_ngoodbtags_isLoaded;
  float    hardgenpt_;
  TBranch *hardgenpt_branch;
  bool     hardgenpt_isLoaded;
  float    calomet_;
  TBranch *calomet_branch;
  bool     calomet_isLoaded;
  float    calomet_phi_;
  TBranch *calomet_phi_branch;
  bool     calomet_phi_isLoaded;
  int      lep1_pdgid_;
  TBranch *lep1_pdgid_branch;
  bool     lep1_pdgid_isLoaded;
  int      lep1_production_type_;
  TBranch *lep1_production_type_branch;
  bool     lep1_production_type_isLoaded;
  float    lep1_MiniIso_;
  TBranch *lep1_MiniIso_branch;
  bool     lep1_MiniIso_isLoaded;
  float    lep1_relIso_;
  TBranch *lep1_relIso_branch;
  bool     lep1_relIso_isLoaded;
  bool     lep1_passLooseID_;
  TBranch *lep1_passLooseID_branch;
  bool     lep1_passLooseID_isLoaded;
  bool     lep1_passMediumID_;
  TBranch *lep1_passMediumID_branch;
  bool     lep1_passMediumID_isLoaded;
  bool     lep1_passTightID_;
  TBranch *lep1_passTightID_branch;
  bool     lep1_passTightID_isLoaded;
  bool     lep1_passVeto_;
  TBranch *lep1_passVeto_branch;
  bool     lep1_passVeto_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep1_p4_;
  TBranch *lep1_p4_branch;
  bool     lep1_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep1_mcp4_;
  TBranch *lep1_mcp4_branch;
  bool     lep1_mcp4_isLoaded;
  int      lep1_mc_motherid_;
  TBranch *lep1_mc_motherid_branch;
  bool     lep1_mc_motherid_isLoaded;
  float    lep1_etaSC_;
  TBranch *lep1_etaSC_branch;
  bool     lep1_etaSC_isLoaded;
  float    lep1_dphiMET_;
  TBranch *lep1_dphiMET_branch;
  bool     lep1_dphiMET_isLoaded;
  float    lep1_dphiMET_jup_;
  TBranch *lep1_dphiMET_jup_branch;
  bool     lep1_dphiMET_jup_isLoaded;
  float    lep1_dphiMET_jdown_;
  TBranch *lep1_dphiMET_jdown_branch;
  bool     lep1_dphiMET_jdown_isLoaded;
  float    lep1_dphiMET_rl_;
  TBranch *lep1_dphiMET_rl_branch;
  bool     lep1_dphiMET_rl_isLoaded;
  float    lep1_dphiMET_rl_jup_;
  TBranch *lep1_dphiMET_rl_jup_branch;
  bool     lep1_dphiMET_rl_jup_isLoaded;
  float    lep1_dphiMET_rl_jdown_;
  TBranch *lep1_dphiMET_rl_jdown_branch;
  bool     lep1_dphiMET_rl_jdown_isLoaded;
  float    lep1_dphiMET_resup_;
  TBranch *lep1_dphiMET_resup_branch;
  bool     lep1_dphiMET_resup_isLoaded;
  float    lep1_dphiMET_resdown_;
  TBranch *lep1_dphiMET_resdown_branch;
  bool     lep1_dphiMET_resdown_isLoaded;
  float    lep1_dphiMET_rl_resup_;
  TBranch *lep1_dphiMET_rl_resup_branch;
  bool     lep1_dphiMET_rl_resup_isLoaded;
  float    lep1_dphiMET_rl_resdown_;
  TBranch *lep1_dphiMET_rl_resdown_branch;
  bool     lep1_dphiMET_rl_resdown_isLoaded;
  float    lep1_dphiGenMET_;
  TBranch *lep1_dphiGenMET_branch;
  bool     lep1_dphiGenMET_isLoaded;
  float    lep1_dphiGenMET_rl_;
  TBranch *lep1_dphiGenMET_rl_branch;
  bool     lep1_dphiGenMET_rl_isLoaded;
  int      lep2_pdgid_;
  TBranch *lep2_pdgid_branch;
  bool     lep2_pdgid_isLoaded;
  int      lep2_production_type_;
  TBranch *lep2_production_type_branch;
  bool     lep2_production_type_isLoaded;
  float    lep2_MiniIso_;
  TBranch *lep2_MiniIso_branch;
  bool     lep2_MiniIso_isLoaded;
  float    lep2_relIso_;
  TBranch *lep2_relIso_branch;
  bool     lep2_relIso_isLoaded;
  bool     lep2_passLooseID_;
  TBranch *lep2_passLooseID_branch;
  bool     lep2_passLooseID_isLoaded;
  bool     lep2_passMediumID_;
  TBranch *lep2_passMediumID_branch;
  bool     lep2_passMediumID_isLoaded;
  bool     lep2_passTightID_;
  TBranch *lep2_passTightID_branch;
  bool     lep2_passTightID_isLoaded;
  bool     lep2_passVeto_;
  TBranch *lep2_passVeto_branch;
  bool     lep2_passVeto_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep2_p4_;
  TBranch *lep2_p4_branch;
  bool     lep2_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep2_mcp4_;
  TBranch *lep2_mcp4_branch;
  bool     lep2_mcp4_isLoaded;
  int      lep2_mc_motherid_;
  TBranch *lep2_mc_motherid_branch;
  bool     lep2_mc_motherid_isLoaded;
  float    lep2_etaSC_;
  TBranch *lep2_etaSC_branch;
  bool     lep2_etaSC_isLoaded;
  float    lep2_dphiMET_;
  TBranch *lep2_dphiMET_branch;
  bool     lep2_dphiMET_isLoaded;
  float    lep2_dphiMET_jup_;
  TBranch *lep2_dphiMET_jup_branch;
  bool     lep2_dphiMET_jup_isLoaded;
  float    lep2_dphiMET_jdown_;
  TBranch *lep2_dphiMET_jdown_branch;
  bool     lep2_dphiMET_jdown_isLoaded;
  float    lep2_dphiMET_rl_;
  TBranch *lep2_dphiMET_rl_branch;
  bool     lep2_dphiMET_rl_isLoaded;
  float    lep2_dphiMET_rl_jup_;
  TBranch *lep2_dphiMET_rl_jup_branch;
  bool     lep2_dphiMET_rl_jup_isLoaded;
  float    lep2_dphiMET_rl_jdown_;
  TBranch *lep2_dphiMET_rl_jdown_branch;
  bool     lep2_dphiMET_rl_jdown_isLoaded;
  float    lep2_dphiMET_resup_;
  TBranch *lep2_dphiMET_resup_branch;
  bool     lep2_dphiMET_resup_isLoaded;
  float    lep2_dphiMET_resdown_;
  TBranch *lep2_dphiMET_resdown_branch;
  bool     lep2_dphiMET_resdown_isLoaded;
  float    lep2_dphiMET_rl_resup_;
  TBranch *lep2_dphiMET_rl_resup_branch;
  bool     lep2_dphiMET_rl_resup_isLoaded;
  float    lep2_dphiMET_rl_resdown_;
  TBranch *lep2_dphiMET_rl_resdown_branch;
  bool     lep2_dphiMET_rl_resdown_isLoaded;
  float    lep2_dphiGenMET_;
  TBranch *lep2_dphiGenMET_branch;
  bool     lep2_dphiGenMET_isLoaded;
  float    lep2_dphiGenMET_rl_;
  TBranch *lep2_dphiGenMET_rl_branch;
  bool     lep2_dphiGenMET_rl_isLoaded;
  vector<float> *ph_sigmaIEtaEta_fill5x5_;
  TBranch *ph_sigmaIEtaEta_fill5x5_branch;
  bool     ph_sigmaIEtaEta_fill5x5_isLoaded;
  vector<float> *ph_hOverE_;
  TBranch *ph_hOverE_branch;
  bool     ph_hOverE_isLoaded;
  vector<float> *ph_r9_;
  TBranch *ph_r9_branch;
  bool     ph_r9_isLoaded;
  vector<float> *ph_chiso_;
  TBranch *ph_chiso_branch;
  bool     ph_chiso_isLoaded;
  vector<float> *ph_nhiso_;
  TBranch *ph_nhiso_branch;
  bool     ph_nhiso_isLoaded;
  vector<float> *ph_phiso_;
  TBranch *ph_phiso_branch;
  bool     ph_phiso_isLoaded;
  vector<bool> *ph_passLooseID_;
  TBranch *ph_passLooseID_branch;
  bool     ph_passLooseID_isLoaded;
  vector<bool> *ph_passMediumID_;
  TBranch *ph_passMediumID_branch;
  bool     ph_passMediumID_isLoaded;
  vector<bool> *ph_passTightID_;
  TBranch *ph_passTightID_branch;
  bool     ph_passTightID_isLoaded;
  vector<int> *ph_overlapJetId_;
  TBranch *ph_overlapJetId_branch;
  bool     ph_overlapJetId_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ph_p4_;
  TBranch *ph_p4_branch;
  bool     ph_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ph_mcp4_;
  TBranch *ph_mcp4_branch;
  bool     ph_mcp4_isLoaded;
  vector<int> *ph_mcMatchId_;
  TBranch *ph_mcMatchId_branch;
  bool     ph_mcMatchId_isLoaded;
  vector<float> *ph_genIso04_;
  TBranch *ph_genIso04_branch;
  bool     ph_genIso04_isLoaded;
  vector<float> *ph_drMinParton_;
  TBranch *ph_drMinParton_branch;
  bool     ph_drMinParton_isLoaded;
  int      nskimjets_;
  TBranch *nskimjets_branch;
  bool     nskimjets_isLoaded;
  int      nskimbtagmed_;
  TBranch *nskimbtagmed_branch;
  bool     nskimbtagmed_isLoaded;
  int      nskimbtagloose_;
  TBranch *nskimbtagloose_branch;
  bool     nskimbtagloose_isLoaded;
  int      nskimbtagtight_;
  TBranch *nskimbtagtight_branch;
  bool     nskimbtagtight_isLoaded;
  int      ngoodjets_;
  TBranch *ngoodjets_branch;
  bool     ngoodjets_isLoaded;
  int      ngoodbtags_;
  TBranch *ngoodbtags_branch;
  bool     ngoodbtags_isLoaded;
  int      nloosebtags_;
  TBranch *nloosebtags_branch;
  bool     nloosebtags_isLoaded;
  int      ntightbtags_;
  TBranch *ntightbtags_branch;
  bool     ntightbtags_isLoaded;
  int      nanalysisbtags_;
  TBranch *nanalysisbtags_branch;
  bool     nanalysisbtags_isLoaded;
  int      nfailjets_;
  TBranch *nfailjets_branch;
  bool     nfailjets_isLoaded;
  float    ak4_HT_;
  TBranch *ak4_HT_branch;
  bool     ak4_HT_isLoaded;
  float    ak4_HTeta5_;
  TBranch *ak4_HTeta5_branch;
  bool     ak4_HTeta5_isLoaded;
  float    ak4_MHT_pt_;
  TBranch *ak4_MHT_pt_branch;
  bool     ak4_MHT_pt_isLoaded;
  float    ak4_MHT_phi_;
  TBranch *ak4_MHT_phi_branch;
  bool     ak4_MHT_phi_isLoaded;
  float    ak4_htratiom_;
  TBranch *ak4_htratiom_branch;
  bool     ak4_htratiom_isLoaded;
  vector<float> *dphi_ak4pfjet_met_;
  TBranch *dphi_ak4pfjet_met_branch;
  bool     dphi_ak4pfjet_met_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ak4pfjets_p4_;
  TBranch *ak4pfjets_p4_branch;
  bool     ak4pfjets_p4_isLoaded;
  vector<bool> *ak4pfjets_passMEDbtag_;
  TBranch *ak4pfjets_passMEDbtag_branch;
  bool     ak4pfjets_passMEDbtag_isLoaded;
  vector<float> *ak4pfjets_deepCSV_;
  TBranch *ak4pfjets_deepCSV_branch;
  bool     ak4pfjets_deepCSV_isLoaded;
  vector<float> *ak4pfjets_CSV_;
  TBranch *ak4pfjets_CSV_branch;
  bool     ak4pfjets_CSV_isLoaded;
  vector<float> *ak4pfjets_mva_;
  TBranch *ak4pfjets_mva_branch;
  bool     ak4pfjets_mva_isLoaded;
  vector<int> *ak4pfjets_parton_flavor_;
  TBranch *ak4pfjets_parton_flavor_branch;
  bool     ak4pfjets_parton_flavor_isLoaded;
  vector<int> *ak4pfjets_hadron_flavor_;
  TBranch *ak4pfjets_hadron_flavor_branch;
  bool     ak4pfjets_hadron_flavor_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *ak4pfjets_leadMEDbjet_p4_;
  TBranch *ak4pfjets_leadMEDbjet_p4_branch;
  bool     ak4pfjets_leadMEDbjet_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *ak4pfjets_leadbtag_p4_;
  TBranch *ak4pfjets_leadbtag_p4_branch;
  bool     ak4pfjets_leadbtag_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ak4genjets_p4_;
  TBranch *ak4genjets_p4_branch;
  bool     ak4genjets_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *softtags_p4_;
  TBranch *softtags_p4_branch;
  bool     softtags_p4_isLoaded;
  int      nsoftbtags_;
  TBranch *nsoftbtags_branch;
  bool     nsoftbtags_isLoaded;
  int      jup_nskimjets_;
  TBranch *jup_nskimjets_branch;
  bool     jup_nskimjets_isLoaded;
  int      jup_nskimbtagmed_;
  TBranch *jup_nskimbtagmed_branch;
  bool     jup_nskimbtagmed_isLoaded;
  int      jup_nskimbtagloose_;
  TBranch *jup_nskimbtagloose_branch;
  bool     jup_nskimbtagloose_isLoaded;
  int      jup_nskimbtagtight_;
  TBranch *jup_nskimbtagtight_branch;
  bool     jup_nskimbtagtight_isLoaded;
  int      jup_ngoodjets_;
  TBranch *jup_ngoodjets_branch;
  bool     jup_ngoodjets_isLoaded;
  int      jup_ngoodbtags_;
  TBranch *jup_ngoodbtags_branch;
  bool     jup_ngoodbtags_isLoaded;
  int      jup_nloosebtags_;
  TBranch *jup_nloosebtags_branch;
  bool     jup_nloosebtags_isLoaded;
  int      jup_ntightbtags_;
  TBranch *jup_ntightbtags_branch;
  bool     jup_ntightbtags_isLoaded;
  int      jup_nanalysisbtags_;
  TBranch *jup_nanalysisbtags_branch;
  bool     jup_nanalysisbtags_isLoaded;
  int      jup_nfailjets_;
  TBranch *jup_nfailjets_branch;
  bool     jup_nfailjets_isLoaded;
  float    jup_ak4_HT_;
  TBranch *jup_ak4_HT_branch;
  bool     jup_ak4_HT_isLoaded;
  float    jup_ak4_HTeta5_;
  TBranch *jup_ak4_HTeta5_branch;
  bool     jup_ak4_HTeta5_isLoaded;
  float    jup_ak4_MHT_pt_;
  TBranch *jup_ak4_MHT_pt_branch;
  bool     jup_ak4_MHT_pt_isLoaded;
  float    jup_ak4_MHT_phi_;
  TBranch *jup_ak4_MHT_phi_branch;
  bool     jup_ak4_MHT_phi_isLoaded;
  float    jup_ak4_htratiom_;
  TBranch *jup_ak4_htratiom_branch;
  bool     jup_ak4_htratiom_isLoaded;
  vector<float> *jup_dphi_ak4pfjet_met_;
  TBranch *jup_dphi_ak4pfjet_met_branch;
  bool     jup_dphi_ak4pfjet_met_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jup_ak4pfjets_p4_;
  TBranch *jup_ak4pfjets_p4_branch;
  bool     jup_ak4pfjets_p4_isLoaded;
  vector<bool> *jup_ak4pfjets_passMEDbtag_;
  TBranch *jup_ak4pfjets_passMEDbtag_branch;
  bool     jup_ak4pfjets_passMEDbtag_isLoaded;
  vector<float> *jup_ak4pfjets_deepCSV_;
  TBranch *jup_ak4pfjets_deepCSV_branch;
  bool     jup_ak4pfjets_deepCSV_isLoaded;
  vector<float> *jup_ak4pfjets_CSV_;
  TBranch *jup_ak4pfjets_CSV_branch;
  bool     jup_ak4pfjets_CSV_isLoaded;
  vector<float> *jup_ak4pfjets_mva_;
  TBranch *jup_ak4pfjets_mva_branch;
  bool     jup_ak4pfjets_mva_isLoaded;
  vector<int> *jup_ak4pfjets_parton_flavor_;
  TBranch *jup_ak4pfjets_parton_flavor_branch;
  bool     jup_ak4pfjets_parton_flavor_isLoaded;
  vector<int> *jup_ak4pfjets_hadron_flavor_;
  TBranch *jup_ak4pfjets_hadron_flavor_branch;
  bool     jup_ak4pfjets_hadron_flavor_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jup_ak4pfjets_leadMEDbjet_p4_;
  TBranch *jup_ak4pfjets_leadMEDbjet_p4_branch;
  bool     jup_ak4pfjets_leadMEDbjet_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jup_ak4pfjets_leadbtag_p4_;
  TBranch *jup_ak4pfjets_leadbtag_p4_branch;
  bool     jup_ak4pfjets_leadbtag_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jup_ak4genjets_p4_;
  TBranch *jup_ak4genjets_p4_branch;
  bool     jup_ak4genjets_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jup_softtags_p4_;
  TBranch *jup_softtags_p4_branch;
  bool     jup_softtags_p4_isLoaded;
  int      jup_nsoftbtags_;
  TBranch *jup_nsoftbtags_branch;
  bool     jup_nsoftbtags_isLoaded;
  int      jdown_nskimjets_;
  TBranch *jdown_nskimjets_branch;
  bool     jdown_nskimjets_isLoaded;
  int      jdown_nskimbtagmed_;
  TBranch *jdown_nskimbtagmed_branch;
  bool     jdown_nskimbtagmed_isLoaded;
  int      jdown_nskimbtagloose_;
  TBranch *jdown_nskimbtagloose_branch;
  bool     jdown_nskimbtagloose_isLoaded;
  int      jdown_nskimbtagtight_;
  TBranch *jdown_nskimbtagtight_branch;
  bool     jdown_nskimbtagtight_isLoaded;
  int      jdown_ngoodjets_;
  TBranch *jdown_ngoodjets_branch;
  bool     jdown_ngoodjets_isLoaded;
  int      jdown_ngoodbtags_;
  TBranch *jdown_ngoodbtags_branch;
  bool     jdown_ngoodbtags_isLoaded;
  int      jdown_nloosebtags_;
  TBranch *jdown_nloosebtags_branch;
  bool     jdown_nloosebtags_isLoaded;
  int      jdown_ntightbtags_;
  TBranch *jdown_ntightbtags_branch;
  bool     jdown_ntightbtags_isLoaded;
  int      jdown_nanalysisbtags_;
  TBranch *jdown_nanalysisbtags_branch;
  bool     jdown_nanalysisbtags_isLoaded;
  int      jdown_nfailjets_;
  TBranch *jdown_nfailjets_branch;
  bool     jdown_nfailjets_isLoaded;
  float    jdown_ak4_HT_;
  TBranch *jdown_ak4_HT_branch;
  bool     jdown_ak4_HT_isLoaded;
  float    jdown_ak4_HTeta5_;
  TBranch *jdown_ak4_HTeta5_branch;
  bool     jdown_ak4_HTeta5_isLoaded;
  float    jdown_ak4_MHT_pt_;
  TBranch *jdown_ak4_MHT_pt_branch;
  bool     jdown_ak4_MHT_pt_isLoaded;
  float    jdown_ak4_MHT_phi_;
  TBranch *jdown_ak4_MHT_phi_branch;
  bool     jdown_ak4_MHT_phi_isLoaded;
  float    jdown_ak4_htratiom_;
  TBranch *jdown_ak4_htratiom_branch;
  bool     jdown_ak4_htratiom_isLoaded;
  vector<float> *jdown_dphi_ak4pfjet_met_;
  TBranch *jdown_dphi_ak4pfjet_met_branch;
  bool     jdown_dphi_ak4pfjet_met_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jdown_ak4pfjets_p4_;
  TBranch *jdown_ak4pfjets_p4_branch;
  bool     jdown_ak4pfjets_p4_isLoaded;
  vector<bool> *jdown_ak4pfjets_passMEDbtag_;
  TBranch *jdown_ak4pfjets_passMEDbtag_branch;
  bool     jdown_ak4pfjets_passMEDbtag_isLoaded;
  vector<float> *jdown_ak4pfjets_deepCSV_;
  TBranch *jdown_ak4pfjets_deepCSV_branch;
  bool     jdown_ak4pfjets_deepCSV_isLoaded;
  vector<float> *jdown_ak4pfjets_CSV_;
  TBranch *jdown_ak4pfjets_CSV_branch;
  bool     jdown_ak4pfjets_CSV_isLoaded;
  vector<float> *jdown_ak4pfjets_mva_;
  TBranch *jdown_ak4pfjets_mva_branch;
  bool     jdown_ak4pfjets_mva_isLoaded;
  vector<int> *jdown_ak4pfjets_parton_flavor_;
  TBranch *jdown_ak4pfjets_parton_flavor_branch;
  bool     jdown_ak4pfjets_parton_flavor_isLoaded;
  vector<int> *jdown_ak4pfjets_hadron_flavor_;
  TBranch *jdown_ak4pfjets_hadron_flavor_branch;
  bool     jdown_ak4pfjets_hadron_flavor_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jdown_ak4pfjets_leadMEDbjet_p4_;
  TBranch *jdown_ak4pfjets_leadMEDbjet_p4_branch;
  bool     jdown_ak4pfjets_leadMEDbjet_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jdown_ak4pfjets_leadbtag_p4_;
  TBranch *jdown_ak4pfjets_leadbtag_p4_branch;
  bool     jdown_ak4pfjets_leadbtag_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jdown_ak4genjets_p4_;
  TBranch *jdown_ak4genjets_p4_branch;
  bool     jdown_ak4genjets_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jdown_softtags_p4_;
  TBranch *jdown_softtags_p4_branch;
  bool     jdown_softtags_p4_isLoaded;
  int      jdown_nsoftbtags_;
  TBranch *jdown_nsoftbtags_branch;
  bool     jdown_nsoftbtags_isLoaded;
  vector<bool> *genleps_isfromt_;
  TBranch *genleps_isfromt_branch;
  bool     genleps_isfromt_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genleps_p4_;
  TBranch *genleps_p4_branch;
  bool     genleps_p4_isLoaded;
  vector<int> *genleps_id_;
  TBranch *genleps_id_branch;
  bool     genleps_id_isLoaded;
  vector<int> *genleps__genpsidx_;
  TBranch *genleps__genpsidx_branch;
  bool     genleps__genpsidx_isLoaded;
  vector<int> *genleps_status_;
  TBranch *genleps_status_branch;
  bool     genleps_status_isLoaded;
  vector<bool> *genleps_fromHardProcessDecayed_;
  TBranch *genleps_fromHardProcessDecayed_branch;
  bool     genleps_fromHardProcessDecayed_isLoaded;
  vector<bool> *genleps_fromHardProcessFinalState_;
  TBranch *genleps_fromHardProcessFinalState_branch;
  bool     genleps_fromHardProcessFinalState_isLoaded;
  vector<bool> *genleps_isHardProcess_;
  TBranch *genleps_isHardProcess_branch;
  bool     genleps_isHardProcess_isLoaded;
  vector<bool> *genleps_isLastCopy_;
  TBranch *genleps_isLastCopy_branch;
  bool     genleps_isLastCopy_isLoaded;
  vector<int> *genleps_gentaudecay_;
  TBranch *genleps_gentaudecay_branch;
  bool     genleps_gentaudecay_isLoaded;
  int      gen_nfromtleps__;
  TBranch *gen_nfromtleps__branch;
  bool     gen_nfromtleps__isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genleps_motherp4_;
  TBranch *genleps_motherp4_branch;
  bool     genleps_motherp4_isLoaded;
  vector<int> *genleps_motherid_;
  TBranch *genleps_motherid_branch;
  bool     genleps_motherid_isLoaded;
  vector<int> *genleps_motheridx_;
  TBranch *genleps_motheridx_branch;
  bool     genleps_motheridx_isLoaded;
  vector<int> *genleps_motherstatus_;
  TBranch *genleps_motherstatus_branch;
  bool     genleps_motherstatus_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genleps_gmotherp4_;
  TBranch *genleps_gmotherp4_branch;
  bool     genleps_gmotherp4_isLoaded;
  vector<int> *genleps_gmotherid_;
  TBranch *genleps_gmotherid_branch;
  bool     genleps_gmotherid_isLoaded;
  vector<int> *genleps_gmotheridx_;
  TBranch *genleps_gmotheridx_branch;
  bool     genleps_gmotheridx_isLoaded;
  vector<int> *genleps_gmotherstatus_;
  TBranch *genleps_gmotherstatus_branch;
  bool     genleps_gmotherstatus_isLoaded;
  vector<bool> *gennus_isfromt_;
  TBranch *gennus_isfromt_branch;
  bool     gennus_isfromt_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennus_p4_;
  TBranch *gennus_p4_branch;
  bool     gennus_p4_isLoaded;
  vector<int> *gennus_id_;
  TBranch *gennus_id_branch;
  bool     gennus_id_isLoaded;
  vector<int> *gennus__genpsidx_;
  TBranch *gennus__genpsidx_branch;
  bool     gennus__genpsidx_isLoaded;
  vector<int> *gennus_status_;
  TBranch *gennus_status_branch;
  bool     gennus_status_isLoaded;
  vector<bool> *gennus_fromHardProcessDecayed_;
  TBranch *gennus_fromHardProcessDecayed_branch;
  bool     gennus_fromHardProcessDecayed_isLoaded;
  vector<bool> *gennus_fromHardProcessFinalState_;
  TBranch *gennus_fromHardProcessFinalState_branch;
  bool     gennus_fromHardProcessFinalState_isLoaded;
  vector<bool> *gennus_isHardProcess_;
  TBranch *gennus_isHardProcess_branch;
  bool     gennus_isHardProcess_isLoaded;
  vector<bool> *gennus_isLastCopy_;
  TBranch *gennus_isLastCopy_branch;
  bool     gennus_isLastCopy_isLoaded;
  vector<int> *gennus_gentaudecay_;
  TBranch *gennus_gentaudecay_branch;
  bool     gennus_gentaudecay_isLoaded;
  int      gen_nfromtnus__;
  TBranch *gen_nfromtnus__branch;
  bool     gen_nfromtnus__isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennus_motherp4_;
  TBranch *gennus_motherp4_branch;
  bool     gennus_motherp4_isLoaded;
  vector<int> *gennus_motherid_;
  TBranch *gennus_motherid_branch;
  bool     gennus_motherid_isLoaded;
  vector<int> *gennus_motheridx_;
  TBranch *gennus_motheridx_branch;
  bool     gennus_motheridx_isLoaded;
  vector<int> *gennus_motherstatus_;
  TBranch *gennus_motherstatus_branch;
  bool     gennus_motherstatus_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennus_gmotherp4_;
  TBranch *gennus_gmotherp4_branch;
  bool     gennus_gmotherp4_isLoaded;
  vector<int> *gennus_gmotherid_;
  TBranch *gennus_gmotherid_branch;
  bool     gennus_gmotherid_isLoaded;
  vector<int> *gennus_gmotheridx_;
  TBranch *gennus_gmotheridx_branch;
  bool     gennus_gmotheridx_isLoaded;
  vector<int> *gennus_gmotherstatus_;
  TBranch *gennus_gmotherstatus_branch;
  bool     gennus_gmotherstatus_isLoaded;
  vector<bool> *genqs_isfromt_;
  TBranch *genqs_isfromt_branch;
  bool     genqs_isfromt_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genqs_p4_;
  TBranch *genqs_p4_branch;
  bool     genqs_p4_isLoaded;
  vector<int> *genqs_id_;
  TBranch *genqs_id_branch;
  bool     genqs_id_isLoaded;
  vector<int> *genqs__genpsidx_;
  TBranch *genqs__genpsidx_branch;
  bool     genqs__genpsidx_isLoaded;
  vector<int> *genqs_status_;
  TBranch *genqs_status_branch;
  bool     genqs_status_isLoaded;
  vector<bool> *genqs_fromHardProcessDecayed_;
  TBranch *genqs_fromHardProcessDecayed_branch;
  bool     genqs_fromHardProcessDecayed_isLoaded;
  vector<bool> *genqs_fromHardProcessFinalState_;
  TBranch *genqs_fromHardProcessFinalState_branch;
  bool     genqs_fromHardProcessFinalState_isLoaded;
  vector<bool> *genqs_isHardProcess_;
  TBranch *genqs_isHardProcess_branch;
  bool     genqs_isHardProcess_isLoaded;
  vector<bool> *genqs_isLastCopy_;
  TBranch *genqs_isLastCopy_branch;
  bool     genqs_isLastCopy_isLoaded;
  vector<int> *genqs_gentaudecay_;
  TBranch *genqs_gentaudecay_branch;
  bool     genqs_gentaudecay_isLoaded;
  int      gen_nfromtqs__;
  TBranch *gen_nfromtqs__branch;
  bool     gen_nfromtqs__isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genqs_motherp4_;
  TBranch *genqs_motherp4_branch;
  bool     genqs_motherp4_isLoaded;
  vector<int> *genqs_motherid_;
  TBranch *genqs_motherid_branch;
  bool     genqs_motherid_isLoaded;
  vector<int> *genqs_motheridx_;
  TBranch *genqs_motheridx_branch;
  bool     genqs_motheridx_isLoaded;
  vector<int> *genqs_motherstatus_;
  TBranch *genqs_motherstatus_branch;
  bool     genqs_motherstatus_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genqs_gmotherp4_;
  TBranch *genqs_gmotherp4_branch;
  bool     genqs_gmotherp4_isLoaded;
  vector<int> *genqs_gmotherid_;
  TBranch *genqs_gmotherid_branch;
  bool     genqs_gmotherid_isLoaded;
  vector<int> *genqs_gmotheridx_;
  TBranch *genqs_gmotheridx_branch;
  bool     genqs_gmotheridx_isLoaded;
  vector<int> *genqs_gmotherstatus_;
  TBranch *genqs_gmotherstatus_branch;
  bool     genqs_gmotherstatus_isLoaded;
  vector<bool> *genbosons_isfromt_;
  TBranch *genbosons_isfromt_branch;
  bool     genbosons_isfromt_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genbosons_p4_;
  TBranch *genbosons_p4_branch;
  bool     genbosons_p4_isLoaded;
  vector<int> *genbosons_id_;
  TBranch *genbosons_id_branch;
  bool     genbosons_id_isLoaded;
  vector<int> *genbosons__genpsidx_;
  TBranch *genbosons__genpsidx_branch;
  bool     genbosons__genpsidx_isLoaded;
  vector<int> *genbosons_status_;
  TBranch *genbosons_status_branch;
  bool     genbosons_status_isLoaded;
  vector<bool> *genbosons_fromHardProcessDecayed_;
  TBranch *genbosons_fromHardProcessDecayed_branch;
  bool     genbosons_fromHardProcessDecayed_isLoaded;
  vector<bool> *genbosons_fromHardProcessFinalState_;
  TBranch *genbosons_fromHardProcessFinalState_branch;
  bool     genbosons_fromHardProcessFinalState_isLoaded;
  vector<bool> *genbosons_isHardProcess_;
  TBranch *genbosons_isHardProcess_branch;
  bool     genbosons_isHardProcess_isLoaded;
  vector<bool> *genbosons_isLastCopy_;
  TBranch *genbosons_isLastCopy_branch;
  bool     genbosons_isLastCopy_isLoaded;
  vector<int> *genbosons_gentaudecay_;
  TBranch *genbosons_gentaudecay_branch;
  bool     genbosons_gentaudecay_isLoaded;
  int      gen_nfromtbosons__;
  TBranch *gen_nfromtbosons__branch;
  bool     gen_nfromtbosons__isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genbosons_motherp4_;
  TBranch *genbosons_motherp4_branch;
  bool     genbosons_motherp4_isLoaded;
  vector<int> *genbosons_motherid_;
  TBranch *genbosons_motherid_branch;
  bool     genbosons_motherid_isLoaded;
  vector<int> *genbosons_motheridx_;
  TBranch *genbosons_motheridx_branch;
  bool     genbosons_motheridx_isLoaded;
  vector<int> *genbosons_motherstatus_;
  TBranch *genbosons_motherstatus_branch;
  bool     genbosons_motherstatus_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genbosons_gmotherp4_;
  TBranch *genbosons_gmotherp4_branch;
  bool     genbosons_gmotherp4_isLoaded;
  vector<int> *genbosons_gmotherid_;
  TBranch *genbosons_gmotherid_branch;
  bool     genbosons_gmotherid_isLoaded;
  vector<int> *genbosons_gmotheridx_;
  TBranch *genbosons_gmotheridx_branch;
  bool     genbosons_gmotheridx_isLoaded;
  vector<int> *genbosons_gmotherstatus_;
  TBranch *genbosons_gmotherstatus_branch;
  bool     genbosons_gmotherstatus_isLoaded;
  vector<bool> *gensusy_isfromt_;
  TBranch *gensusy_isfromt_branch;
  bool     gensusy_isfromt_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gensusy_p4_;
  TBranch *gensusy_p4_branch;
  bool     gensusy_p4_isLoaded;
  vector<int> *gensusy_id_;
  TBranch *gensusy_id_branch;
  bool     gensusy_id_isLoaded;
  vector<int> *gensusy__genpsidx_;
  TBranch *gensusy__genpsidx_branch;
  bool     gensusy__genpsidx_isLoaded;
  vector<int> *gensusy_status_;
  TBranch *gensusy_status_branch;
  bool     gensusy_status_isLoaded;
  vector<bool> *gensusy_fromHardProcessDecayed_;
  TBranch *gensusy_fromHardProcessDecayed_branch;
  bool     gensusy_fromHardProcessDecayed_isLoaded;
  vector<bool> *gensusy_fromHardProcessFinalState_;
  TBranch *gensusy_fromHardProcessFinalState_branch;
  bool     gensusy_fromHardProcessFinalState_isLoaded;
  vector<bool> *gensusy_isHardProcess_;
  TBranch *gensusy_isHardProcess_branch;
  bool     gensusy_isHardProcess_isLoaded;
  vector<bool> *gensusy_isLastCopy_;
  TBranch *gensusy_isLastCopy_branch;
  bool     gensusy_isLastCopy_isLoaded;
  vector<int> *gensusy_gentaudecay_;
  TBranch *gensusy_gentaudecay_branch;
  bool     gensusy_gentaudecay_isLoaded;
  int      gen_nfromtsusy__;
  TBranch *gen_nfromtsusy__branch;
  bool     gen_nfromtsusy__isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gensusy_motherp4_;
  TBranch *gensusy_motherp4_branch;
  bool     gensusy_motherp4_isLoaded;
  vector<int> *gensusy_motherid_;
  TBranch *gensusy_motherid_branch;
  bool     gensusy_motherid_isLoaded;
  vector<int> *gensusy_motheridx_;
  TBranch *gensusy_motheridx_branch;
  bool     gensusy_motheridx_isLoaded;
  vector<int> *gensusy_motherstatus_;
  TBranch *gensusy_motherstatus_branch;
  bool     gensusy_motherstatus_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gensusy_gmotherp4_;
  TBranch *gensusy_gmotherp4_branch;
  bool     gensusy_gmotherp4_isLoaded;
  vector<int> *gensusy_gmotherid_;
  TBranch *gensusy_gmotherid_branch;
  bool     gensusy_gmotherid_isLoaded;
  vector<int> *gensusy_gmotheridx_;
  TBranch *gensusy_gmotheridx_branch;
  bool     gensusy_gmotheridx_isLoaded;
  vector<int> *gensusy_gmotherstatus_;
  TBranch *gensusy_gmotherstatus_branch;
  bool     gensusy_gmotherstatus_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ak8pfjets_p4_;
  TBranch *ak8pfjets_p4_branch;
  bool     ak8pfjets_p4_isLoaded;
  vector<float> *ak8pfjets_tau1_;
  TBranch *ak8pfjets_tau1_branch;
  bool     ak8pfjets_tau1_isLoaded;
  vector<float> *ak8pfjets_tau2_;
  TBranch *ak8pfjets_tau2_branch;
  bool     ak8pfjets_tau2_isLoaded;
  vector<float> *ak8pfjets_tau3_;
  TBranch *ak8pfjets_tau3_branch;
  bool     ak8pfjets_tau3_isLoaded;
  vector<int> *ak8pfjets_parton_flavor_;
  TBranch *ak8pfjets_parton_flavor_branch;
  bool     ak8pfjets_parton_flavor_isLoaded;
  int      nGoodAK8PFJets_;
  TBranch *nGoodAK8PFJets_branch;
  bool     nGoodAK8PFJets_isLoaded;
  vector<float> *ak8pfjets_deepdisc_qcd_;
  TBranch *ak8pfjets_deepdisc_qcd_branch;
  bool     ak8pfjets_deepdisc_qcd_isLoaded;
  vector<float> *ak8pfjets_deepdisc_top_;
  TBranch *ak8pfjets_deepdisc_top_branch;
  bool     ak8pfjets_deepdisc_top_isLoaded;
  vector<float> *ak8pfjets_deepdisc_w_;
  TBranch *ak8pfjets_deepdisc_w_branch;
  bool     ak8pfjets_deepdisc_w_isLoaded;
  vector<float> *ak8pfjets_deepdisc_z_;
  TBranch *ak8pfjets_deepdisc_z_branch;
  bool     ak8pfjets_deepdisc_z_isLoaded;
  vector<float> *ak8pfjets_deepdisc_zbb_;
  TBranch *ak8pfjets_deepdisc_zbb_branch;
  bool     ak8pfjets_deepdisc_zbb_isLoaded;
  vector<float> *ak8pfjets_deepdisc_hbb_;
  TBranch *ak8pfjets_deepdisc_hbb_branch;
  bool     ak8pfjets_deepdisc_hbb_isLoaded;
  vector<float> *ak8pfjets_deepdisc_h4q_;
  TBranch *ak8pfjets_deepdisc_h4q_branch;
  bool     ak8pfjets_deepdisc_h4q_isLoaded;
  float    lead_ak8deepdisc_top_;
  TBranch *lead_ak8deepdisc_top_branch;
  bool     lead_ak8deepdisc_top_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jup_ak8pfjets_p4_;
  TBranch *jup_ak8pfjets_p4_branch;
  bool     jup_ak8pfjets_p4_isLoaded;
  vector<float> *jup_ak8pfjets_tau1_;
  TBranch *jup_ak8pfjets_tau1_branch;
  bool     jup_ak8pfjets_tau1_isLoaded;
  vector<float> *jup_ak8pfjets_tau2_;
  TBranch *jup_ak8pfjets_tau2_branch;
  bool     jup_ak8pfjets_tau2_isLoaded;
  vector<float> *jup_ak8pfjets_tau3_;
  TBranch *jup_ak8pfjets_tau3_branch;
  bool     jup_ak8pfjets_tau3_isLoaded;
  vector<int> *jup_ak8pfjets_parton_flavor_;
  TBranch *jup_ak8pfjets_parton_flavor_branch;
  bool     jup_ak8pfjets_parton_flavor_isLoaded;
  int      jup_nGoodAK8PFJets_;
  TBranch *jup_nGoodAK8PFJets_branch;
  bool     jup_nGoodAK8PFJets_isLoaded;
  vector<float> *jup_ak8pfjets_deepdisc_qcd_;
  TBranch *jup_ak8pfjets_deepdisc_qcd_branch;
  bool     jup_ak8pfjets_deepdisc_qcd_isLoaded;
  vector<float> *jup_ak8pfjets_deepdisc_top_;
  TBranch *jup_ak8pfjets_deepdisc_top_branch;
  bool     jup_ak8pfjets_deepdisc_top_isLoaded;
  vector<float> *jup_ak8pfjets_deepdisc_w_;
  TBranch *jup_ak8pfjets_deepdisc_w_branch;
  bool     jup_ak8pfjets_deepdisc_w_isLoaded;
  vector<float> *jup_ak8pfjets_deepdisc_z_;
  TBranch *jup_ak8pfjets_deepdisc_z_branch;
  bool     jup_ak8pfjets_deepdisc_z_isLoaded;
  vector<float> *jup_ak8pfjets_deepdisc_zbb_;
  TBranch *jup_ak8pfjets_deepdisc_zbb_branch;
  bool     jup_ak8pfjets_deepdisc_zbb_isLoaded;
  vector<float> *jup_ak8pfjets_deepdisc_hbb_;
  TBranch *jup_ak8pfjets_deepdisc_hbb_branch;
  bool     jup_ak8pfjets_deepdisc_hbb_isLoaded;
  vector<float> *jup_ak8pfjets_deepdisc_h4q_;
  TBranch *jup_ak8pfjets_deepdisc_h4q_branch;
  bool     jup_ak8pfjets_deepdisc_h4q_isLoaded;
  float    jup_lead_ak8deepdisc_top_;
  TBranch *jup_lead_ak8deepdisc_top_branch;
  bool     jup_lead_ak8deepdisc_top_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jdown_ak8pfjets_p4_;
  TBranch *jdown_ak8pfjets_p4_branch;
  bool     jdown_ak8pfjets_p4_isLoaded;
  vector<float> *jdown_ak8pfjets_tau1_;
  TBranch *jdown_ak8pfjets_tau1_branch;
  bool     jdown_ak8pfjets_tau1_isLoaded;
  vector<float> *jdown_ak8pfjets_tau2_;
  TBranch *jdown_ak8pfjets_tau2_branch;
  bool     jdown_ak8pfjets_tau2_isLoaded;
  vector<float> *jdown_ak8pfjets_tau3_;
  TBranch *jdown_ak8pfjets_tau3_branch;
  bool     jdown_ak8pfjets_tau3_isLoaded;
  vector<int> *jdown_ak8pfjets_parton_flavor_;
  TBranch *jdown_ak8pfjets_parton_flavor_branch;
  bool     jdown_ak8pfjets_parton_flavor_isLoaded;
  int      jdown_nGoodAK8PFJets_;
  TBranch *jdown_nGoodAK8PFJets_branch;
  bool     jdown_nGoodAK8PFJets_isLoaded;
  vector<float> *jdown_ak8pfjets_deepdisc_qcd_;
  TBranch *jdown_ak8pfjets_deepdisc_qcd_branch;
  bool     jdown_ak8pfjets_deepdisc_qcd_isLoaded;
  vector<float> *jdown_ak8pfjets_deepdisc_top_;
  TBranch *jdown_ak8pfjets_deepdisc_top_branch;
  bool     jdown_ak8pfjets_deepdisc_top_isLoaded;
  vector<float> *jdown_ak8pfjets_deepdisc_w_;
  TBranch *jdown_ak8pfjets_deepdisc_w_branch;
  bool     jdown_ak8pfjets_deepdisc_w_isLoaded;
  vector<float> *jdown_ak8pfjets_deepdisc_z_;
  TBranch *jdown_ak8pfjets_deepdisc_z_branch;
  bool     jdown_ak8pfjets_deepdisc_z_isLoaded;
  vector<float> *jdown_ak8pfjets_deepdisc_zbb_;
  TBranch *jdown_ak8pfjets_deepdisc_zbb_branch;
  bool     jdown_ak8pfjets_deepdisc_zbb_isLoaded;
  vector<float> *jdown_ak8pfjets_deepdisc_hbb_;
  TBranch *jdown_ak8pfjets_deepdisc_hbb_branch;
  bool     jdown_ak8pfjets_deepdisc_hbb_isLoaded;
  vector<float> *jdown_ak8pfjets_deepdisc_h4q_;
  TBranch *jdown_ak8pfjets_deepdisc_h4q_branch;
  bool     jdown_ak8pfjets_deepdisc_h4q_isLoaded;
  float    jdown_lead_ak8deepdisc_top_;
  TBranch *jdown_lead_ak8deepdisc_top_branch;
  bool     jdown_lead_ak8deepdisc_top_isLoaded;
  vector<float> *ak4pfjets_cvsl_;
  TBranch *ak4pfjets_cvsl_branch;
  bool     ak4pfjets_cvsl_isLoaded;
  vector<float> *ak4pfjets_ptD_;
  TBranch *ak4pfjets_ptD_branch;
  bool     ak4pfjets_ptD_isLoaded;
  vector<float> *ak4pfjets_axis1_;
  TBranch *ak4pfjets_axis1_branch;
  bool     ak4pfjets_axis1_isLoaded;
  vector<float> *ak4pfjets_axis2_;
  TBranch *ak4pfjets_axis2_branch;
  bool     ak4pfjets_axis2_isLoaded;
  vector<int> *ak4pfjets_mult_;
  TBranch *ak4pfjets_mult_branch;
  bool     ak4pfjets_mult_isLoaded;
  vector<float> *ak4pfjets_deepCSVb_;
  TBranch *ak4pfjets_deepCSVb_branch;
  bool     ak4pfjets_deepCSVb_isLoaded;
  vector<float> *ak4pfjets_deepCSVbb_;
  TBranch *ak4pfjets_deepCSVbb_branch;
  bool     ak4pfjets_deepCSVbb_isLoaded;
  vector<float> *ak4pfjets_deepCSVc_;
  TBranch *ak4pfjets_deepCSVc_branch;
  bool     ak4pfjets_deepCSVc_isLoaded;
  vector<float> *ak4pfjets_deepCSVl_;
  TBranch *ak4pfjets_deepCSVl_branch;
  bool     ak4pfjets_deepCSVl_isLoaded;
  vector<vector<int> > *topcands_ak4idx_;
  TBranch *topcands_ak4idx_branch;
  bool     topcands_ak4idx_isLoaded;
  vector<float> *topcands_disc_;
  TBranch *topcands_disc_branch;
  bool     topcands_disc_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *topcands_p4_;
  TBranch *topcands_p4_branch;
  bool     topcands_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *topcands_Wp4_;
  TBranch *topcands_Wp4_branch;
  bool     topcands_Wp4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *tftops_p4_;
  TBranch *tftops_p4_branch;
  bool     tftops_p4_isLoaded;
  vector<float> *tftops_disc_;
  TBranch *tftops_disc_branch;
  bool     tftops_disc_isLoaded;
  vector<vector<float> > *tftops_subjet_pt_;
  TBranch *tftops_subjet_pt_branch;
  bool     tftops_subjet_pt_isLoaded;
  vector<vector<float> > *tftops_subjet_eta_;
  TBranch *tftops_subjet_eta_branch;
  bool     tftops_subjet_eta_isLoaded;
  vector<vector<float> > *tftops_subjet_phi_;
  TBranch *tftops_subjet_phi_branch;
  bool     tftops_subjet_phi_isLoaded;
  vector<float> *jup_ak4pfjets_cvsl_;
  TBranch *jup_ak4pfjets_cvsl_branch;
  bool     jup_ak4pfjets_cvsl_isLoaded;
  vector<float> *jup_ak4pfjets_ptD_;
  TBranch *jup_ak4pfjets_ptD_branch;
  bool     jup_ak4pfjets_ptD_isLoaded;
  vector<float> *jup_ak4pfjets_axis1_;
  TBranch *jup_ak4pfjets_axis1_branch;
  bool     jup_ak4pfjets_axis1_isLoaded;
  vector<float> *jup_ak4pfjets_axis2_;
  TBranch *jup_ak4pfjets_axis2_branch;
  bool     jup_ak4pfjets_axis2_isLoaded;
  vector<int> *jup_ak4pfjets_mult_;
  TBranch *jup_ak4pfjets_mult_branch;
  bool     jup_ak4pfjets_mult_isLoaded;
  vector<float> *jup_ak4pfjets_deepCSVb_;
  TBranch *jup_ak4pfjets_deepCSVb_branch;
  bool     jup_ak4pfjets_deepCSVb_isLoaded;
  vector<float> *jup_ak4pfjets_deepCSVbb_;
  TBranch *jup_ak4pfjets_deepCSVbb_branch;
  bool     jup_ak4pfjets_deepCSVbb_isLoaded;
  vector<float> *jup_ak4pfjets_deepCSVc_;
  TBranch *jup_ak4pfjets_deepCSVc_branch;
  bool     jup_ak4pfjets_deepCSVc_isLoaded;
  vector<float> *jup_ak4pfjets_deepCSVl_;
  TBranch *jup_ak4pfjets_deepCSVl_branch;
  bool     jup_ak4pfjets_deepCSVl_isLoaded;
  vector<vector<int> > *jup_topcands_ak4idx_;
  TBranch *jup_topcands_ak4idx_branch;
  bool     jup_topcands_ak4idx_isLoaded;
  vector<float> *jup_topcands_disc_;
  TBranch *jup_topcands_disc_branch;
  bool     jup_topcands_disc_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jup_topcands_p4_;
  TBranch *jup_topcands_p4_branch;
  bool     jup_topcands_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jup_topcands_Wp4_;
  TBranch *jup_topcands_Wp4_branch;
  bool     jup_topcands_Wp4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jup_tftops_p4_;
  TBranch *jup_tftops_p4_branch;
  bool     jup_tftops_p4_isLoaded;
  vector<float> *jup_tftops_disc_;
  TBranch *jup_tftops_disc_branch;
  bool     jup_tftops_disc_isLoaded;
  vector<vector<float> > *jup_tftops_subjet_pt_;
  TBranch *jup_tftops_subjet_pt_branch;
  bool     jup_tftops_subjet_pt_isLoaded;
  vector<vector<float> > *jup_tftops_subjet_eta_;
  TBranch *jup_tftops_subjet_eta_branch;
  bool     jup_tftops_subjet_eta_isLoaded;
  vector<vector<float> > *jup_tftops_subjet_phi_;
  TBranch *jup_tftops_subjet_phi_branch;
  bool     jup_tftops_subjet_phi_isLoaded;
  vector<float> *jdown_ak4pfjets_cvsl_;
  TBranch *jdown_ak4pfjets_cvsl_branch;
  bool     jdown_ak4pfjets_cvsl_isLoaded;
  vector<float> *jdown_ak4pfjets_ptD_;
  TBranch *jdown_ak4pfjets_ptD_branch;
  bool     jdown_ak4pfjets_ptD_isLoaded;
  vector<float> *jdown_ak4pfjets_axis1_;
  TBranch *jdown_ak4pfjets_axis1_branch;
  bool     jdown_ak4pfjets_axis1_isLoaded;
  vector<float> *jdown_ak4pfjets_axis2_;
  TBranch *jdown_ak4pfjets_axis2_branch;
  bool     jdown_ak4pfjets_axis2_isLoaded;
  vector<int> *jdown_ak4pfjets_mult_;
  TBranch *jdown_ak4pfjets_mult_branch;
  bool     jdown_ak4pfjets_mult_isLoaded;
  vector<float> *jdown_ak4pfjets_deepCSVb_;
  TBranch *jdown_ak4pfjets_deepCSVb_branch;
  bool     jdown_ak4pfjets_deepCSVb_isLoaded;
  vector<float> *jdown_ak4pfjets_deepCSVbb_;
  TBranch *jdown_ak4pfjets_deepCSVbb_branch;
  bool     jdown_ak4pfjets_deepCSVbb_isLoaded;
  vector<float> *jdown_ak4pfjets_deepCSVc_;
  TBranch *jdown_ak4pfjets_deepCSVc_branch;
  bool     jdown_ak4pfjets_deepCSVc_isLoaded;
  vector<float> *jdown_ak4pfjets_deepCSVl_;
  TBranch *jdown_ak4pfjets_deepCSVl_branch;
  bool     jdown_ak4pfjets_deepCSVl_isLoaded;
  vector<vector<int> > *jdown_topcands_ak4idx_;
  TBranch *jdown_topcands_ak4idx_branch;
  bool     jdown_topcands_ak4idx_isLoaded;
  vector<float> *jdown_topcands_disc_;
  TBranch *jdown_topcands_disc_branch;
  bool     jdown_topcands_disc_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jdown_topcands_p4_;
  TBranch *jdown_topcands_p4_branch;
  bool     jdown_topcands_p4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jdown_topcands_Wp4_;
  TBranch *jdown_topcands_Wp4_branch;
  bool     jdown_topcands_Wp4_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jdown_tftops_p4_;
  TBranch *jdown_tftops_p4_branch;
  bool     jdown_tftops_p4_isLoaded;
  vector<float> *jdown_tftops_disc_;
  TBranch *jdown_tftops_disc_branch;
  bool     jdown_tftops_disc_isLoaded;
  vector<vector<float> > *jdown_tftops_subjet_pt_;
  TBranch *jdown_tftops_subjet_pt_branch;
  bool     jdown_tftops_subjet_pt_isLoaded;
  vector<vector<float> > *jdown_tftops_subjet_eta_;
  TBranch *jdown_tftops_subjet_eta_branch;
  bool     jdown_tftops_subjet_eta_isLoaded;
  vector<vector<float> > *jdown_tftops_subjet_phi_;
  TBranch *jdown_tftops_subjet_phi_branch;
  bool     jdown_tftops_subjet_phi_isLoaded;
  float    pfmet_uncorr_jup_;
  TBranch *pfmet_uncorr_jup_branch;
  bool     pfmet_uncorr_jup_isLoaded;
  float    pfmet_uncorr_phi_jup_;
  TBranch *pfmet_uncorr_phi_jup_branch;
  bool     pfmet_uncorr_phi_jup_isLoaded;
  float    pfmet_uncorr_jdown_;
  TBranch *pfmet_uncorr_jdown_branch;
  bool     pfmet_uncorr_jdown_isLoaded;
  float    pfmet_uncorr_phi_jdown_;
  TBranch *pfmet_uncorr_phi_jdown_branch;
  bool     pfmet_uncorr_phi_jdown_isLoaded;
  float    pfmet_resup_;
  TBranch *pfmet_resup_branch;
  bool     pfmet_resup_isLoaded;
  float    pfmet_phi_resup_;
  TBranch *pfmet_phi_resup_branch;
  bool     pfmet_phi_resup_isLoaded;
  float    pfmet_resdown_;
  TBranch *pfmet_resdown_branch;
  bool     pfmet_resdown_isLoaded;
  float    pfmet_phi_resdown_;
  TBranch *pfmet_phi_resdown_branch;
  bool     pfmet_phi_resdown_isLoaded;
  float    pfmet_rl_resup_;
  TBranch *pfmet_rl_resup_branch;
  bool     pfmet_rl_resup_isLoaded;
  float    pfmet_phi_rl_resup_;
  TBranch *pfmet_phi_rl_resup_branch;
  bool     pfmet_phi_rl_resup_isLoaded;
  float    pfmet_rl_resdown_;
  TBranch *pfmet_rl_resdown_branch;
  bool     pfmet_rl_resdown_isLoaded;
  float    mt_met_lep_resup_;
  TBranch *mt_met_lep_resup_branch;
  bool     mt_met_lep_resup_isLoaded;
  float    mt_met_lep_rl_resup_;
  TBranch *mt_met_lep_rl_resup_branch;
  bool     mt_met_lep_rl_resup_isLoaded;
  float    mt_met_lep_resdown_;
  TBranch *mt_met_lep_resdown_branch;
  bool     mt_met_lep_resdown_isLoaded;
  float    mt_met_lep_rl_resdown_;
  TBranch *mt_met_lep_rl_resdown_branch;
  bool     mt_met_lep_rl_resdown_isLoaded;
  float    topnessMod_resup_;
  TBranch *topnessMod_resup_branch;
  bool     topnessMod_resup_isLoaded;
  float    topnessMod_rl_resup_;
  TBranch *topnessMod_rl_resup_branch;
  bool     topnessMod_rl_resup_isLoaded;
  float    topnessMod_resdown_;
  TBranch *topnessMod_resdown_branch;
  bool     topnessMod_resdown_isLoaded;
  float    topnessMod_rl_resdown_;
  TBranch *topnessMod_rl_resdown_branch;
  bool     topnessMod_rl_resdown_isLoaded;
  float    mindphi_met_j1_j2_resup_;
  TBranch *mindphi_met_j1_j2_resup_branch;
  bool     mindphi_met_j1_j2_resup_isLoaded;
  float    mindphi_met_j1_j2_rl_resup_;
  TBranch *mindphi_met_j1_j2_rl_resup_branch;
  bool     mindphi_met_j1_j2_rl_resup_isLoaded;
  float    mindphi_met_j1_j2_resdown_;
  TBranch *mindphi_met_j1_j2_resdown_branch;
  bool     mindphi_met_j1_j2_resdown_isLoaded;
  float    mindphi_met_j1_j2_rl_resdown_;
  TBranch *mindphi_met_j1_j2_rl_resdown_branch;
  bool     mindphi_met_j1_j2_rl_resdown_isLoaded;
  float    MT2_ll_resup_;
  TBranch *MT2_ll_resup_branch;
  bool     MT2_ll_resup_isLoaded;
  float    MT2_ll_resdown_;
  TBranch *MT2_ll_resdown_branch;
  bool     MT2_ll_resdown_isLoaded;
  float    genmet_rl_;
  TBranch *genmet_rl_branch;
  bool     genmet_rl_isLoaded;
  float    genmet_phi_rl_;
  TBranch *genmet_phi_rl_branch;
  bool     genmet_phi_rl_isLoaded;
  float    topnessMod_genmet_;
  TBranch *topnessMod_genmet_branch;
  bool     topnessMod_genmet_isLoaded;
  float    topnessMod_rl_genmet_;
  TBranch *topnessMod_rl_genmet_branch;
  bool     topnessMod_rl_genmet_isLoaded;
  float    mt_genmet_lep_;
  TBranch *mt_genmet_lep_branch;
  bool     mt_genmet_lep_isLoaded;
  float    mt_genmet_lep_rl_;
  TBranch *mt_genmet_lep_rl_branch;
  bool     mt_genmet_lep_rl_isLoaded;
  float    mindphi_genmet_j1_j2_;
  TBranch *mindphi_genmet_j1_j2_branch;
  bool     mindphi_genmet_j1_j2_isLoaded;
  float    mindphi_genmet_j1_j2_rl_;
  TBranch *mindphi_genmet_j1_j2_rl_branch;
  bool     mindphi_genmet_j1_j2_rl_isLoaded;
  float    MT2_ll_genmet_;
  TBranch *MT2_ll_genmet_branch;
  bool     MT2_ll_genmet_isLoaded;
  bool     filt_cscbeamhalo_;
  TBranch *filt_cscbeamhalo_branch;
  bool     filt_cscbeamhalo_isLoaded;
  bool     filt_cscbeamhalo2015_;
  TBranch *filt_cscbeamhalo2015_branch;
  bool     filt_cscbeamhalo2015_isLoaded;
  bool     filt_globaltighthalo2016_;
  TBranch *filt_globaltighthalo2016_branch;
  bool     filt_globaltighthalo2016_isLoaded;
  bool     filt_globalsupertighthalo2016_;
  TBranch *filt_globalsupertighthalo2016_branch;
  bool     filt_globalsupertighthalo2016_isLoaded;
  bool     filt_ecallaser_;
  TBranch *filt_ecallaser_branch;
  bool     filt_ecallaser_isLoaded;
  bool     filt_ecaltp_;
  TBranch *filt_ecaltp_branch;
  bool     filt_ecaltp_isLoaded;
  bool     filt_ecalbadcalib_;
  TBranch *filt_ecalbadcalib_branch;
  bool     filt_ecalbadcalib_isLoaded;
  bool     filt_eebadsc_;
  TBranch *filt_eebadsc_branch;
  bool     filt_eebadsc_isLoaded;
  bool     filt_goodvtx_;
  TBranch *filt_goodvtx_branch;
  bool     filt_goodvtx_isLoaded;
  bool     filt_badevents_;
  TBranch *filt_badevents_branch;
  bool     filt_badevents_isLoaded;
  bool     filt_hbhenoise_;
  TBranch *filt_hbhenoise_branch;
  bool     filt_hbhenoise_isLoaded;
  bool     filt_hbheisonoise_;
  TBranch *filt_hbheisonoise_branch;
  bool     filt_hbheisonoise_isLoaded;
  bool     filt_hcallaser_;
  TBranch *filt_hcallaser_branch;
  bool     filt_hcallaser_isLoaded;
  bool     filt_trkfail_;
  TBranch *filt_trkfail_branch;
  bool     filt_trkfail_isLoaded;
  bool     filt_trkPOG_;
  TBranch *filt_trkPOG_branch;
  bool     filt_trkPOG_isLoaded;
  bool     filt_trkPOG_logerr_tmc_;
  TBranch *filt_trkPOG_logerr_tmc_branch;
  bool     filt_trkPOG_logerr_tmc_isLoaded;
  bool     filt_trkPOG_tmc_;
  TBranch *filt_trkPOG_tmc_branch;
  bool     filt_trkPOG_tmc_isLoaded;
  bool     filt_trkPOG_tms_;
  TBranch *filt_trkPOG_tms_branch;
  bool     filt_trkPOG_tms_isLoaded;
  int      firstGoodVtxIdx_;
  TBranch *firstGoodVtxIdx_branch;
  bool     firstGoodVtxIdx_isLoaded;
  bool     filt_badChargedCandidateFilter_;
  TBranch *filt_badChargedCandidateFilter_branch;
  bool     filt_badChargedCandidateFilter_isLoaded;
  bool     filt_badMuonFilter_;
  TBranch *filt_badMuonFilter_branch;
  bool     filt_badMuonFilter_isLoaded;
  bool     filt_met_;
  TBranch *filt_met_branch;
  bool     filt_met_isLoaded;
  bool     filt_fastsimjets_;
  TBranch *filt_fastsimjets_branch;
  bool     filt_fastsimjets_isLoaded;
  bool     filt_fastsimjets_jup_;
  TBranch *filt_fastsimjets_jup_branch;
  bool     filt_fastsimjets_jup_isLoaded;
  bool     filt_fastsimjets_jdown_;
  TBranch *filt_fastsimjets_jdown_branch;
  bool     filt_fastsimjets_jdown_isLoaded;
  bool     filt_jetWithBadMuon_;
  TBranch *filt_jetWithBadMuon_branch;
  bool     filt_jetWithBadMuon_isLoaded;
  bool     filt_jetWithBadMuon_jup_;
  TBranch *filt_jetWithBadMuon_jup_branch;
  bool     filt_jetWithBadMuon_jup_isLoaded;
  bool     filt_jetWithBadMuon_jdown_;
  TBranch *filt_jetWithBadMuon_jdown_branch;
  bool     filt_jetWithBadMuon_jdown_isLoaded;
  bool     filt_pfovercalomet_;
  TBranch *filt_pfovercalomet_branch;
  bool     filt_pfovercalomet_isLoaded;
  bool     filt_badmuons_;
  TBranch *filt_badmuons_branch;
  bool     filt_badmuons_isLoaded;
  bool     filt_duplicatemuons_;
  TBranch *filt_duplicatemuons_branch;
  bool     filt_duplicatemuons_isLoaded;
  bool     filt_nobadmuons_;
  TBranch *filt_nobadmuons_branch;
  bool     filt_nobadmuons_isLoaded;
  float    dR_lep_leadb_;
  TBranch *dR_lep_leadb_branch;
  bool     dR_lep_leadb_isLoaded;
  float    dphi_Wlep_;
  TBranch *dphi_Wlep_branch;
  bool     dphi_Wlep_isLoaded;
  float    MET_over_sqrtHT_;
  TBranch *MET_over_sqrtHT_branch;
  bool     MET_over_sqrtHT_isLoaded;
  float    MT2_lb_b_;
  TBranch *MT2_lb_b_branch;
  bool     MT2_lb_b_isLoaded;
  float    MT2_lb_b_mass_;
  TBranch *MT2_lb_b_mass_branch;
  bool     MT2_lb_b_mass_isLoaded;
  float    MT2_lb_bqq_;
  TBranch *MT2_lb_bqq_branch;
  bool     MT2_lb_bqq_isLoaded;
  float    MT2_lb_bqq_mass_;
  TBranch *MT2_lb_bqq_mass_branch;
  bool     MT2_lb_bqq_mass_isLoaded;
  float    Mjjj_;
  TBranch *Mjjj_branch;
  bool     Mjjj_isLoaded;
  float    Mjjj_lep2_;
  TBranch *Mjjj_lep2_branch;
  bool     Mjjj_lep2_isLoaded;
  float    MT2_had_;
  TBranch *MT2_had_branch;
  bool     MT2_had_isLoaded;
  float    MT2_had_genmet_;
  TBranch *MT2_had_genmet_branch;
  bool     MT2_had_genmet_isLoaded;
  float    MT2_had_jup_;
  TBranch *MT2_had_jup_branch;
  bool     MT2_had_jup_isLoaded;
  float    MT2_had_jdown_;
  TBranch *MT2_had_jdown_branch;
  bool     MT2_had_jdown_isLoaded;
  float    mht_pt_;
  TBranch *mht_pt_branch;
  bool     mht_pt_isLoaded;
  float    mht_pt_jup_;
  TBranch *mht_pt_jup_branch;
  bool     mht_pt_jup_isLoaded;
  float    mht_pt_jdown_;
  TBranch *mht_pt_jdown_branch;
  bool     mht_pt_jdown_isLoaded;
  float    mht_phi_;
  TBranch *mht_phi_branch;
  bool     mht_phi_isLoaded;
  float    mht_phi_jup_;
  TBranch *mht_phi_jup_branch;
  bool     mht_phi_jup_isLoaded;
  float    mht_phi_jdown_;
  TBranch *mht_phi_jdown_branch;
  bool     mht_phi_jdown_isLoaded;
  float    pfmet_egclean_;
  TBranch *pfmet_egclean_branch;
  bool     pfmet_egclean_isLoaded;
  float    pfmet_egclean_phi_;
  TBranch *pfmet_egclean_phi_branch;
  bool     pfmet_egclean_phi_isLoaded;
  float    pfmet_muegclean_;
  TBranch *pfmet_muegclean_branch;
  bool     pfmet_muegclean_isLoaded;
  float    pfmet_muegclean_phi_;
  TBranch *pfmet_muegclean_phi_branch;
  bool     pfmet_muegclean_phi_isLoaded;
  float    pfmet_muegcleanfix_;
  TBranch *pfmet_muegcleanfix_branch;
  bool     pfmet_muegcleanfix_isLoaded;
  float    pfmet_muegcleanfix_phi_;
  TBranch *pfmet_muegcleanfix_phi_branch;
  bool     pfmet_muegcleanfix_phi_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
  const unsigned int &run();
  const unsigned int &ls();
  const unsigned int &evt();
  const int &nvtxs();
  const int &year();
  const int &sampver();
  const int &pu_nvtxs();
  const float &pfmet();
  const float &pfmet_phi();
  const float &pfmet_jup();
  const float &pfmet_phi_jup();
  const float &pfmet_jdown();
  const float &pfmet_phi_jdown();
  const float &pfmet_rl();
  const float &pfmet_phi_rl();
  const float &pfmet_rl_jup();
  const float &pfmet_phi_rl_jup();
  const float &pfmet_rl_jdown();
  const float &pfmet_phi_rl_jdown();
  const float &pfmet_uncorr();
  const float &pfmet_uncorr_phi();
  const float &pfmet_original();
  const float &pfmet_original_phi();
  const float &scale1fb();
  const float &xsec();
  const float &xsec_uncert();
  const float &kfactor();
  const float &pu_ntrue();
  const int &ngoodleps();
  const int &nlooseleps();
  const int &nvetoleps();
  const bool &is_data();
  const string &dataset();
  const string &filename();
  const string &cms3tag();
  const unsigned int &nEvents();
  const unsigned int &nEvents_goodvtx();
  const unsigned int &nEvents_MET30();
  const unsigned int &nEvents_1goodlep();
  const unsigned int &nEvents_2goodjets();
  const int &is0lep();
  const int &is1lep();
  const int &is2lep();
  const int &isZtoNuNu();
  const int &is1lepFromW();
  const int &is1lepFromTop();
  const float &MT2W();
  const float &MT2W_rl();
  const float &MT2_ll();
  const float &mindphi_met_j1_j2();
  const float &mindphi_met_j1_j2_rl();
  const float &mt_met_lep();
  const float &mt_met_lep_rl();
  const float &MT2W_jup();
  const float &MT2W_rl_jup();
  const float &MT2_ll_jup();
  const float &mindphi_met_j1_j2_jup();
  const float &mindphi_met_j1_j2_rl_jup();
  const float &mt_met_lep_jup();
  const float &mt_met_lep_rl_jup();
  const float &MT2W_jdown();
  const float &MT2W_rl_jdown();
  const float &MT2_ll_jdown();
  const float &mindphi_met_j1_j2_jdown();
  const float &mindphi_met_j1_j2_rl_jdown();
  const float &mt_met_lep_jdown();
  const float &mt_met_lep_rl_jdown();
  const float &hadronic_top_chi2();
  const float &ak4pfjets_rho();
  const float &pdf_up_weight();
  const float &pdf_down_weight();
  const vector<string> &genweightsID();
  const int &ngenweights();
  const vector<float> &genweights();
  const float &weight_Q2_up();
  const float &weight_Q2_down();
  const float &weight_muF_up();
  const float &weight_muF_down();
  const float &weight_muR_up();
  const float &weight_muR_down();
  const float &weight_alphas_up();
  const float &weight_alphas_down();
  const float &weight_btagsf();
  const float &weight_btagsf_heavy_UP();
  const float &weight_btagsf_light_UP();
  const float &weight_btagsf_heavy_DN();
  const float &weight_btagsf_light_DN();
  const float &weight_btagsf_fastsim_UP();
  const float &weight_btagsf_fastsim_DN();
  const float &weight_analysisbtagsf();
  const float &weight_analysisbtagsf_heavy_UP();
  const float &weight_analysisbtagsf_light_UP();
  const float &weight_analysisbtagsf_heavy_DN();
  const float &weight_analysisbtagsf_light_DN();
  const float &weight_analysisbtagsf_fastsim_UP();
  const float &weight_analysisbtagsf_fastsim_DN();
  const float &weight_tightbtagsf();
  const float &weight_tightbtagsf_heavy_UP();
  const float &weight_tightbtagsf_light_UP();
  const float &weight_tightbtagsf_heavy_DN();
  const float &weight_tightbtagsf_light_DN();
  const float &weight_tightbtagsf_fastsim_UP();
  const float &weight_tightbtagsf_fastsim_DN();
  const float &weight_loosebtagsf();
  const float &weight_loosebtagsf_heavy_UP();
  const float &weight_loosebtagsf_light_UP();
  const float &weight_loosebtagsf_heavy_DN();
  const float &weight_loosebtagsf_light_DN();
  const float &weight_loosebtagsf_fastsim_UP();
  const float &weight_loosebtagsf_fastsim_DN();
  const float &weight_lepSF();
  const float &weight_lepSF_up();
  const float &weight_lepSF_down();
  const float &weight_vetoLepSF();
  const float &weight_vetoLepSF_up();
  const float &weight_vetoLepSF_down();
  const float &weight_lepSF_fastSim();
  const float &weight_lepSF_fastSim_up();
  const float &weight_lepSF_fastSim_down();
  const float &weight_ISR();
  const float &weight_ISRup();
  const float &weight_ISRdown();
  const float &weight_PU();
  const float &weight_PUup();
  const float &weight_PUdown();
  const float &weight_ISRnjets();
  const float &weight_ISRnjets_UP();
  const float &weight_ISRnjets_DN();
  const float &weight_L1prefire();
  const float &weight_L1prefire_UP();
  const float &weight_L1prefire_DN();
  const int &NISRjets();
  const int &NnonISRjets();
  const vector<string> &sparms_names();
  const vector<float> &sparms_values();
  const int &sparms_subProcessId();
  const float &mass_lsp();
  const float &mass_chargino();
  const float &mass_stop();
  const float &mass_gluino();
  const float &genmet();
  const float &genmet_phi();
  const float &nupt();
  const float &genht();
  const bool &PassTrackVeto();
  const bool &PassTauVeto();
  const float &topness();
  const float &topnessMod();
  const float &topnessMod_rl();
  const float &topnessMod_jup();
  const float &topnessMod_rl_jup();
  const float &topnessMod_jdown();
  const float &topnessMod_rl_jdown();
  const float &Mlb_closestb();
  const float &Mlb_lead_bdiscr();
  const float &Mlb_closestb_jup();
  const float &Mlb_lead_bdiscr_jup();
  const float &Mlb_closestb_jdown();
  const float &Mlb_lead_bdiscr_jdown();
  const int &HLT_SingleEl();
  const int &HLT_SingleMu();
  const int &HLT_MET();
  const int &HLT_MET_MHT();
  const int &HLT_MET100_MHT100();
  const int &HLT_MET110_MHT110();
  const int &HLT_MET120_MHT120();
  const int &HLT_MET130_MHT130();
  const int &HLT_PFHT_unprescaled();
  const int &HLT_PFHT_prescaled();
  const int &HLT_AK8Jet_unprescaled();
  const int &HLT_AK8Jet_prescaled();
  const int &HLT_CaloJet500_NoJetID();
  const int &HLT_DiEl();
  const int &HLT_DiMu();
  const int &HLT_MuE();
  const int &nPhotons();
  const int &ph_ngoodjets();
  const int &ph_ngoodbtags();
  const float &hardgenpt();
  const float &calomet();
  const float &calomet_phi();
  const int &lep1_pdgid();
  const int &lep1_production_type();
  const float &lep1_MiniIso();
  const float &lep1_relIso();
  const bool &lep1_passLooseID();
  const bool &lep1_passMediumID();
  const bool &lep1_passTightID();
  const bool &lep1_passVeto();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep1_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep1_mcp4();
  const int &lep1_mc_motherid();
  const float &lep1_etaSC();
  const float &lep1_dphiMET();
  const float &lep1_dphiMET_jup();
  const float &lep1_dphiMET_jdown();
  const float &lep1_dphiMET_rl();
  const float &lep1_dphiMET_rl_jup();
  const float &lep1_dphiMET_rl_jdown();
  const float &lep1_dphiMET_resup();
  const float &lep1_dphiMET_resdown();
  const float &lep1_dphiMET_rl_resup();
  const float &lep1_dphiMET_rl_resdown();
  const float &lep1_dphiGenMET();
  const float &lep1_dphiGenMET_rl();
  const int &lep2_pdgid();
  const int &lep2_production_type();
  const float &lep2_MiniIso();
  const float &lep2_relIso();
  const bool &lep2_passLooseID();
  const bool &lep2_passMediumID();
  const bool &lep2_passTightID();
  const bool &lep2_passVeto();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep2_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep2_mcp4();
  const int &lep2_mc_motherid();
  const float &lep2_etaSC();
  const float &lep2_dphiMET();
  const float &lep2_dphiMET_jup();
  const float &lep2_dphiMET_jdown();
  const float &lep2_dphiMET_rl();
  const float &lep2_dphiMET_rl_jup();
  const float &lep2_dphiMET_rl_jdown();
  const float &lep2_dphiMET_resup();
  const float &lep2_dphiMET_resdown();
  const float &lep2_dphiMET_rl_resup();
  const float &lep2_dphiMET_rl_resdown();
  const float &lep2_dphiGenMET();
  const float &lep2_dphiGenMET_rl();
  const vector<float> &ph_sigmaIEtaEta_fill5x5();
  const vector<float> &ph_hOverE();
  const vector<float> &ph_r9();
  const vector<float> &ph_chiso();
  const vector<float> &ph_nhiso();
  const vector<float> &ph_phiso();
  const vector<bool> &ph_passLooseID();
  const vector<bool> &ph_passMediumID();
  const vector<bool> &ph_passTightID();
  const vector<int> &ph_overlapJetId();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ph_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ph_mcp4();
  const vector<int> &ph_mcMatchId();
  const vector<float> &ph_genIso04();
  const vector<float> &ph_drMinParton();
  const int &nskimjets();
  const int &nskimbtagmed();
  const int &nskimbtagloose();
  const int &nskimbtagtight();
  const int &ngoodjets();
  const int &ngoodbtags();
  const int &nloosebtags();
  const int &ntightbtags();
  const int &nanalysisbtags();
  const int &nfailjets();
  const float &ak4_HT();
  const float &ak4_HTeta5();
  const float &ak4_MHT_pt();
  const float &ak4_MHT_phi();
  const float &ak4_htratiom();
  const vector<float> &dphi_ak4pfjet_met();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak4pfjets_p4();
  const vector<bool> &ak4pfjets_passMEDbtag();
  const vector<float> &ak4pfjets_deepCSV();
  const vector<float> &ak4pfjets_CSV();
  const vector<float> &ak4pfjets_mva();
  const vector<int> &ak4pfjets_parton_flavor();
  const vector<int> &ak4pfjets_hadron_flavor();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjets_leadMEDbjet_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjets_leadbtag_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak4genjets_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &softtags_p4();
  const int &nsoftbtags();
  const int &jup_nskimjets();
  const int &jup_nskimbtagmed();
  const int &jup_nskimbtagloose();
  const int &jup_nskimbtagtight();
  const int &jup_ngoodjets();
  const int &jup_ngoodbtags();
  const int &jup_nloosebtags();
  const int &jup_ntightbtags();
  const int &jup_nanalysisbtags();
  const int &jup_nfailjets();
  const float &jup_ak4_HT();
  const float &jup_ak4_HTeta5();
  const float &jup_ak4_MHT_pt();
  const float &jup_ak4_MHT_phi();
  const float &jup_ak4_htratiom();
  const vector<float> &jup_dphi_ak4pfjet_met();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_ak4pfjets_p4();
  const vector<bool> &jup_ak4pfjets_passMEDbtag();
  const vector<float> &jup_ak4pfjets_deepCSV();
  const vector<float> &jup_ak4pfjets_CSV();
  const vector<float> &jup_ak4pfjets_mva();
  const vector<int> &jup_ak4pfjets_parton_flavor();
  const vector<int> &jup_ak4pfjets_hadron_flavor();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jup_ak4pfjets_leadMEDbjet_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jup_ak4pfjets_leadbtag_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_ak4genjets_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_softtags_p4();
  const int &jup_nsoftbtags();
  const int &jdown_nskimjets();
  const int &jdown_nskimbtagmed();
  const int &jdown_nskimbtagloose();
  const int &jdown_nskimbtagtight();
  const int &jdown_ngoodjets();
  const int &jdown_ngoodbtags();
  const int &jdown_nloosebtags();
  const int &jdown_ntightbtags();
  const int &jdown_nanalysisbtags();
  const int &jdown_nfailjets();
  const float &jdown_ak4_HT();
  const float &jdown_ak4_HTeta5();
  const float &jdown_ak4_MHT_pt();
  const float &jdown_ak4_MHT_phi();
  const float &jdown_ak4_htratiom();
  const vector<float> &jdown_dphi_ak4pfjet_met();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_ak4pfjets_p4();
  const vector<bool> &jdown_ak4pfjets_passMEDbtag();
  const vector<float> &jdown_ak4pfjets_deepCSV();
  const vector<float> &jdown_ak4pfjets_CSV();
  const vector<float> &jdown_ak4pfjets_mva();
  const vector<int> &jdown_ak4pfjets_parton_flavor();
  const vector<int> &jdown_ak4pfjets_hadron_flavor();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jdown_ak4pfjets_leadMEDbjet_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jdown_ak4pfjets_leadbtag_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_ak4genjets_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_softtags_p4();
  const int &jdown_nsoftbtags();
  const vector<bool> &genleps_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genleps_p4();
  const vector<int> &genleps_id();
  const vector<int> &genleps__genpsidx();
  const vector<int> &genleps_status();
  const vector<bool> &genleps_fromHardProcessDecayed();
  const vector<bool> &genleps_fromHardProcessFinalState();
  const vector<bool> &genleps_isHardProcess();
  const vector<bool> &genleps_isLastCopy();
  const vector<int> &genleps_gentaudecay();
  const int &gen_nfromtleps_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genleps_motherp4();
  const vector<int> &genleps_motherid();
  const vector<int> &genleps_motheridx();
  const vector<int> &genleps_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genleps_gmotherp4();
  const vector<int> &genleps_gmotherid();
  const vector<int> &genleps_gmotheridx();
  const vector<int> &genleps_gmotherstatus();
  const vector<bool> &gennus_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennus_p4();
  const vector<int> &gennus_id();
  const vector<int> &gennus__genpsidx();
  const vector<int> &gennus_status();
  const vector<bool> &gennus_fromHardProcessDecayed();
  const vector<bool> &gennus_fromHardProcessFinalState();
  const vector<bool> &gennus_isHardProcess();
  const vector<bool> &gennus_isLastCopy();
  const vector<int> &gennus_gentaudecay();
  const int &gen_nfromtnus_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennus_motherp4();
  const vector<int> &gennus_motherid();
  const vector<int> &gennus_motheridx();
  const vector<int> &gennus_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennus_gmotherp4();
  const vector<int> &gennus_gmotherid();
  const vector<int> &gennus_gmotheridx();
  const vector<int> &gennus_gmotherstatus();
  const vector<bool> &genqs_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_p4();
  const vector<int> &genqs_id();
  const vector<int> &genqs__genpsidx();
  const vector<int> &genqs_status();
  const vector<bool> &genqs_fromHardProcessDecayed();
  const vector<bool> &genqs_fromHardProcessFinalState();
  const vector<bool> &genqs_isHardProcess();
  const vector<bool> &genqs_isLastCopy();
  const vector<int> &genqs_gentaudecay();
  const int &gen_nfromtqs_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_motherp4();
  const vector<int> &genqs_motherid();
  const vector<int> &genqs_motheridx();
  const vector<int> &genqs_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_gmotherp4();
  const vector<int> &genqs_gmotherid();
  const vector<int> &genqs_gmotheridx();
  const vector<int> &genqs_gmotherstatus();
  const vector<bool> &genbosons_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbosons_p4();
  const vector<int> &genbosons_id();
  const vector<int> &genbosons__genpsidx();
  const vector<int> &genbosons_status();
  const vector<bool> &genbosons_fromHardProcessDecayed();
  const vector<bool> &genbosons_fromHardProcessFinalState();
  const vector<bool> &genbosons_isHardProcess();
  const vector<bool> &genbosons_isLastCopy();
  const vector<int> &genbosons_gentaudecay();
  const int &gen_nfromtbosons_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbosons_motherp4();
  const vector<int> &genbosons_motherid();
  const vector<int> &genbosons_motheridx();
  const vector<int> &genbosons_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbosons_gmotherp4();
  const vector<int> &genbosons_gmotherid();
  const vector<int> &genbosons_gmotheridx();
  const vector<int> &genbosons_gmotherstatus();
  const vector<bool> &gensusy_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gensusy_p4();
  const vector<int> &gensusy_id();
  const vector<int> &gensusy__genpsidx();
  const vector<int> &gensusy_status();
  const vector<bool> &gensusy_fromHardProcessDecayed();
  const vector<bool> &gensusy_fromHardProcessFinalState();
  const vector<bool> &gensusy_isHardProcess();
  const vector<bool> &gensusy_isLastCopy();
  const vector<int> &gensusy_gentaudecay();
  const int &gen_nfromtsusy_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gensusy_motherp4();
  const vector<int> &gensusy_motherid();
  const vector<int> &gensusy_motheridx();
  const vector<int> &gensusy_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gensusy_gmotherp4();
  const vector<int> &gensusy_gmotherid();
  const vector<int> &gensusy_gmotheridx();
  const vector<int> &gensusy_gmotherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak8pfjets_p4();
  const vector<float> &ak8pfjets_tau1();
  const vector<float> &ak8pfjets_tau2();
  const vector<float> &ak8pfjets_tau3();
  const vector<int> &ak8pfjets_parton_flavor();
  const int &nGoodAK8PFJets();
  const vector<float> &ak8pfjets_deepdisc_qcd();
  const vector<float> &ak8pfjets_deepdisc_top();
  const vector<float> &ak8pfjets_deepdisc_w();
  const vector<float> &ak8pfjets_deepdisc_z();
  const vector<float> &ak8pfjets_deepdisc_zbb();
  const vector<float> &ak8pfjets_deepdisc_hbb();
  const vector<float> &ak8pfjets_deepdisc_h4q();
  const float &lead_ak8deepdisc_top();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_ak8pfjets_p4();
  const vector<float> &jup_ak8pfjets_tau1();
  const vector<float> &jup_ak8pfjets_tau2();
  const vector<float> &jup_ak8pfjets_tau3();
  const vector<int> &jup_ak8pfjets_parton_flavor();
  const int &jup_nGoodAK8PFJets();
  const vector<float> &jup_ak8pfjets_deepdisc_qcd();
  const vector<float> &jup_ak8pfjets_deepdisc_top();
  const vector<float> &jup_ak8pfjets_deepdisc_w();
  const vector<float> &jup_ak8pfjets_deepdisc_z();
  const vector<float> &jup_ak8pfjets_deepdisc_zbb();
  const vector<float> &jup_ak8pfjets_deepdisc_hbb();
  const vector<float> &jup_ak8pfjets_deepdisc_h4q();
  const float &jup_lead_ak8deepdisc_top();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_ak8pfjets_p4();
  const vector<float> &jdown_ak8pfjets_tau1();
  const vector<float> &jdown_ak8pfjets_tau2();
  const vector<float> &jdown_ak8pfjets_tau3();
  const vector<int> &jdown_ak8pfjets_parton_flavor();
  const int &jdown_nGoodAK8PFJets();
  const vector<float> &jdown_ak8pfjets_deepdisc_qcd();
  const vector<float> &jdown_ak8pfjets_deepdisc_top();
  const vector<float> &jdown_ak8pfjets_deepdisc_w();
  const vector<float> &jdown_ak8pfjets_deepdisc_z();
  const vector<float> &jdown_ak8pfjets_deepdisc_zbb();
  const vector<float> &jdown_ak8pfjets_deepdisc_hbb();
  const vector<float> &jdown_ak8pfjets_deepdisc_h4q();
  const float &jdown_lead_ak8deepdisc_top();
  const vector<float> &ak4pfjets_cvsl();
  const vector<float> &ak4pfjets_ptD();
  const vector<float> &ak4pfjets_axis1();
  const vector<float> &ak4pfjets_axis2();
  const vector<int> &ak4pfjets_mult();
  const vector<float> &ak4pfjets_deepCSVb();
  const vector<float> &ak4pfjets_deepCSVbb();
  const vector<float> &ak4pfjets_deepCSVc();
  const vector<float> &ak4pfjets_deepCSVl();
  const vector<vector<int> > &topcands_ak4idx();
  const vector<float> &topcands_disc();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &topcands_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &topcands_Wp4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &tftops_p4();
  const vector<float> &tftops_disc();
  const vector<vector<float> > &tftops_subjet_pt();
  const vector<vector<float> > &tftops_subjet_eta();
  const vector<vector<float> > &tftops_subjet_phi();
  const vector<float> &jup_ak4pfjets_cvsl();
  const vector<float> &jup_ak4pfjets_ptD();
  const vector<float> &jup_ak4pfjets_axis1();
  const vector<float> &jup_ak4pfjets_axis2();
  const vector<int> &jup_ak4pfjets_mult();
  const vector<float> &jup_ak4pfjets_deepCSVb();
  const vector<float> &jup_ak4pfjets_deepCSVbb();
  const vector<float> &jup_ak4pfjets_deepCSVc();
  const vector<float> &jup_ak4pfjets_deepCSVl();
  const vector<vector<int> > &jup_topcands_ak4idx();
  const vector<float> &jup_topcands_disc();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_topcands_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_topcands_Wp4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_tftops_p4();
  const vector<float> &jup_tftops_disc();
  const vector<vector<float> > &jup_tftops_subjet_pt();
  const vector<vector<float> > &jup_tftops_subjet_eta();
  const vector<vector<float> > &jup_tftops_subjet_phi();
  const vector<float> &jdown_ak4pfjets_cvsl();
  const vector<float> &jdown_ak4pfjets_ptD();
  const vector<float> &jdown_ak4pfjets_axis1();
  const vector<float> &jdown_ak4pfjets_axis2();
  const vector<int> &jdown_ak4pfjets_mult();
  const vector<float> &jdown_ak4pfjets_deepCSVb();
  const vector<float> &jdown_ak4pfjets_deepCSVbb();
  const vector<float> &jdown_ak4pfjets_deepCSVc();
  const vector<float> &jdown_ak4pfjets_deepCSVl();
  const vector<vector<int> > &jdown_topcands_ak4idx();
  const vector<float> &jdown_topcands_disc();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_topcands_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_topcands_Wp4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_tftops_p4();
  const vector<float> &jdown_tftops_disc();
  const vector<vector<float> > &jdown_tftops_subjet_pt();
  const vector<vector<float> > &jdown_tftops_subjet_eta();
  const vector<vector<float> > &jdown_tftops_subjet_phi();
  const float &pfmet_uncorr_jup();
  const float &pfmet_uncorr_phi_jup();
  const float &pfmet_uncorr_jdown();
  const float &pfmet_uncorr_phi_jdown();
  const float &pfmet_resup();
  const float &pfmet_phi_resup();
  const float &pfmet_resdown();
  const float &pfmet_phi_resdown();
  const float &pfmet_rl_resup();
  const float &pfmet_phi_rl_resup();
  const float &pfmet_rl_resdown();
  const float &mt_met_lep_resup();
  const float &mt_met_lep_rl_resup();
  const float &mt_met_lep_resdown();
  const float &mt_met_lep_rl_resdown();
  const float &topnessMod_resup();
  const float &topnessMod_rl_resup();
  const float &topnessMod_resdown();
  const float &topnessMod_rl_resdown();
  const float &mindphi_met_j1_j2_resup();
  const float &mindphi_met_j1_j2_rl_resup();
  const float &mindphi_met_j1_j2_resdown();
  const float &mindphi_met_j1_j2_rl_resdown();
  const float &MT2_ll_resup();
  const float &MT2_ll_resdown();
  const float &genmet_rl();
  const float &genmet_phi_rl();
  const float &topnessMod_genmet();
  const float &topnessMod_rl_genmet();
  const float &mt_genmet_lep();
  const float &mt_genmet_lep_rl();
  const float &mindphi_genmet_j1_j2();
  const float &mindphi_genmet_j1_j2_rl();
  const float &MT2_ll_genmet();
  const bool &filt_cscbeamhalo();
  const bool &filt_cscbeamhalo2015();
  const bool &filt_globaltighthalo2016();
  const bool &filt_globalsupertighthalo2016();
  const bool &filt_ecallaser();
  const bool &filt_ecaltp();
  const bool &filt_ecalbadcalib();
  const bool &filt_eebadsc();
  const bool &filt_goodvtx();
  const bool &filt_badevents();
  const bool &filt_hbhenoise();
  const bool &filt_hbheisonoise();
  const bool &filt_hcallaser();
  const bool &filt_trkfail();
  const bool &filt_trkPOG();
  const bool &filt_trkPOG_logerr_tmc();
  const bool &filt_trkPOG_tmc();
  const bool &filt_trkPOG_tms();
  const int &firstGoodVtxIdx();
  const bool &filt_badChargedCandidateFilter();
  const bool &filt_badMuonFilter();
  const bool &filt_met();
  const bool &filt_fastsimjets();
  const bool &filt_fastsimjets_jup();
  const bool &filt_fastsimjets_jdown();
  const bool &filt_jetWithBadMuon();
  const bool &filt_jetWithBadMuon_jup();
  const bool &filt_jetWithBadMuon_jdown();
  const bool &filt_pfovercalomet();
  const bool &filt_badmuons();
  const bool &filt_duplicatemuons();
  const bool &filt_nobadmuons();
  const float &dR_lep_leadb();
  const float &dphi_Wlep();
  const float &MET_over_sqrtHT();
  const float &MT2_lb_b();
  const float &MT2_lb_b_mass();
  const float &MT2_lb_bqq();
  const float &MT2_lb_bqq_mass();
  const float &Mjjj();
  const float &Mjjj_lep2();
  const float &MT2_had();
  const float &MT2_had_genmet();
  const float &MT2_had_jup();
  const float &MT2_had_jdown();
  const float &mht_pt();
  const float &mht_pt_jup();
  const float &mht_pt_jdown();
  const float &mht_phi();
  const float &mht_phi_jup();
  const float &mht_phi_jdown();
  const float &pfmet_egclean();
  const float &pfmet_egclean_phi();
  const float &pfmet_muegclean();
  const float &pfmet_muegclean_phi();
  const float &pfmet_muegcleanfix();
  const float &pfmet_muegcleanfix_phi();

  static void progress(int nEventsTotal, int nEventsChain);
};

#ifndef __CINT__
extern StopCMS3 ;
#endif

namespace  {
  const unsigned int &run();
  const unsigned int &ls();
  const unsigned int &evt();
  const int &nvtxs();
  const int &year();
  const int &sampver();
  const int &pu_nvtxs();
  const float &pfmet();
  const float &pfmet_phi();
  const float &pfmet_jup();
  const float &pfmet_phi_jup();
  const float &pfmet_jdown();
  const float &pfmet_phi_jdown();
  const float &pfmet_rl();
  const float &pfmet_phi_rl();
  const float &pfmet_rl_jup();
  const float &pfmet_phi_rl_jup();
  const float &pfmet_rl_jdown();
  const float &pfmet_phi_rl_jdown();
  const float &pfmet_uncorr();
  const float &pfmet_uncorr_phi();
  const float &pfmet_original();
  const float &pfmet_original_phi();
  const float &scale1fb();
  const float &xsec();
  const float &xsec_uncert();
  const float &kfactor();
  const float &pu_ntrue();
  const int &ngoodleps();
  const int &nlooseleps();
  const int &nvetoleps();
  const bool &is_data();
  const string &dataset();
  const string &filename();
  const string &cms3tag();
  const unsigned int &nEvents();
  const unsigned int &nEvents_goodvtx();
  const unsigned int &nEvents_MET30();
  const unsigned int &nEvents_1goodlep();
  const unsigned int &nEvents_2goodjets();
  const int &is0lep();
  const int &is1lep();
  const int &is2lep();
  const int &isZtoNuNu();
  const int &is1lepFromW();
  const int &is1lepFromTop();
  const float &MT2W();
  const float &MT2W_rl();
  const float &MT2_ll();
  const float &mindphi_met_j1_j2();
  const float &mindphi_met_j1_j2_rl();
  const float &mt_met_lep();
  const float &mt_met_lep_rl();
  const float &MT2W_jup();
  const float &MT2W_rl_jup();
  const float &MT2_ll_jup();
  const float &mindphi_met_j1_j2_jup();
  const float &mindphi_met_j1_j2_rl_jup();
  const float &mt_met_lep_jup();
  const float &mt_met_lep_rl_jup();
  const float &MT2W_jdown();
  const float &MT2W_rl_jdown();
  const float &MT2_ll_jdown();
  const float &mindphi_met_j1_j2_jdown();
  const float &mindphi_met_j1_j2_rl_jdown();
  const float &mt_met_lep_jdown();
  const float &mt_met_lep_rl_jdown();
  const float &hadronic_top_chi2();
  const float &ak4pfjets_rho();
  const float &pdf_up_weight();
  const float &pdf_down_weight();
  const vector<string> &genweightsID();
  const int &ngenweights();
  const vector<float> &genweights();
  const float &weight_Q2_up();
  const float &weight_Q2_down();
  const float &weight_muF_up();
  const float &weight_muF_down();
  const float &weight_muR_up();
  const float &weight_muR_down();
  const float &weight_alphas_up();
  const float &weight_alphas_down();
  const float &weight_btagsf();
  const float &weight_btagsf_heavy_UP();
  const float &weight_btagsf_light_UP();
  const float &weight_btagsf_heavy_DN();
  const float &weight_btagsf_light_DN();
  const float &weight_btagsf_fastsim_UP();
  const float &weight_btagsf_fastsim_DN();
  const float &weight_analysisbtagsf();
  const float &weight_analysisbtagsf_heavy_UP();
  const float &weight_analysisbtagsf_light_UP();
  const float &weight_analysisbtagsf_heavy_DN();
  const float &weight_analysisbtagsf_light_DN();
  const float &weight_analysisbtagsf_fastsim_UP();
  const float &weight_analysisbtagsf_fastsim_DN();
  const float &weight_tightbtagsf();
  const float &weight_tightbtagsf_heavy_UP();
  const float &weight_tightbtagsf_light_UP();
  const float &weight_tightbtagsf_heavy_DN();
  const float &weight_tightbtagsf_light_DN();
  const float &weight_tightbtagsf_fastsim_UP();
  const float &weight_tightbtagsf_fastsim_DN();
  const float &weight_loosebtagsf();
  const float &weight_loosebtagsf_heavy_UP();
  const float &weight_loosebtagsf_light_UP();
  const float &weight_loosebtagsf_heavy_DN();
  const float &weight_loosebtagsf_light_DN();
  const float &weight_loosebtagsf_fastsim_UP();
  const float &weight_loosebtagsf_fastsim_DN();
  const float &weight_lepSF();
  const float &weight_lepSF_up();
  const float &weight_lepSF_down();
  const float &weight_vetoLepSF();
  const float &weight_vetoLepSF_up();
  const float &weight_vetoLepSF_down();
  const float &weight_lepSF_fastSim();
  const float &weight_lepSF_fastSim_up();
  const float &weight_lepSF_fastSim_down();
  const float &weight_ISR();
  const float &weight_ISRup();
  const float &weight_ISRdown();
  const float &weight_PU();
  const float &weight_PUup();
  const float &weight_PUdown();
  const float &weight_ISRnjets();
  const float &weight_ISRnjets_UP();
  const float &weight_ISRnjets_DN();
  const float &weight_L1prefire();
  const float &weight_L1prefire_UP();
  const float &weight_L1prefire_DN();
  const int &NISRjets();
  const int &NnonISRjets();
  const vector<string> &sparms_names();
  const vector<float> &sparms_values();
  const int &sparms_subProcessId();
  const float &mass_lsp();
  const float &mass_chargino();
  const float &mass_stop();
  const float &mass_gluino();
  const float &genmet();
  const float &genmet_phi();
  const float &nupt();
  const float &genht();
  const bool &PassTrackVeto();
  const bool &PassTauVeto();
  const float &topness();
  const float &topnessMod();
  const float &topnessMod_rl();
  const float &topnessMod_jup();
  const float &topnessMod_rl_jup();
  const float &topnessMod_jdown();
  const float &topnessMod_rl_jdown();
  const float &Mlb_closestb();
  const float &Mlb_lead_bdiscr();
  const float &Mlb_closestb_jup();
  const float &Mlb_lead_bdiscr_jup();
  const float &Mlb_closestb_jdown();
  const float &Mlb_lead_bdiscr_jdown();
  const int &HLT_SingleEl();
  const int &HLT_SingleMu();
  const int &HLT_MET();
  const int &HLT_MET_MHT();
  const int &HLT_MET100_MHT100();
  const int &HLT_MET110_MHT110();
  const int &HLT_MET120_MHT120();
  const int &HLT_MET130_MHT130();
  const int &HLT_PFHT_unprescaled();
  const int &HLT_PFHT_prescaled();
  const int &HLT_AK8Jet_unprescaled();
  const int &HLT_AK8Jet_prescaled();
  const int &HLT_CaloJet500_NoJetID();
  const int &HLT_DiEl();
  const int &HLT_DiMu();
  const int &HLT_MuE();
  const int &nPhotons();
  const int &ph_ngoodjets();
  const int &ph_ngoodbtags();
  const float &hardgenpt();
  const float &calomet();
  const float &calomet_phi();
  const int &lep1_pdgid();
  const int &lep1_production_type();
  const float &lep1_MiniIso();
  const float &lep1_relIso();
  const bool &lep1_passLooseID();
  const bool &lep1_passMediumID();
  const bool &lep1_passTightID();
  const bool &lep1_passVeto();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep1_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep1_mcp4();
  const int &lep1_mc_motherid();
  const float &lep1_etaSC();
  const float &lep1_dphiMET();
  const float &lep1_dphiMET_jup();
  const float &lep1_dphiMET_jdown();
  const float &lep1_dphiMET_rl();
  const float &lep1_dphiMET_rl_jup();
  const float &lep1_dphiMET_rl_jdown();
  const float &lep1_dphiMET_resup();
  const float &lep1_dphiMET_resdown();
  const float &lep1_dphiMET_rl_resup();
  const float &lep1_dphiMET_rl_resdown();
  const float &lep1_dphiGenMET();
  const float &lep1_dphiGenMET_rl();
  const int &lep2_pdgid();
  const int &lep2_production_type();
  const float &lep2_MiniIso();
  const float &lep2_relIso();
  const bool &lep2_passLooseID();
  const bool &lep2_passMediumID();
  const bool &lep2_passTightID();
  const bool &lep2_passVeto();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep2_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep2_mcp4();
  const int &lep2_mc_motherid();
  const float &lep2_etaSC();
  const float &lep2_dphiMET();
  const float &lep2_dphiMET_jup();
  const float &lep2_dphiMET_jdown();
  const float &lep2_dphiMET_rl();
  const float &lep2_dphiMET_rl_jup();
  const float &lep2_dphiMET_rl_jdown();
  const float &lep2_dphiMET_resup();
  const float &lep2_dphiMET_resdown();
  const float &lep2_dphiMET_rl_resup();
  const float &lep2_dphiMET_rl_resdown();
  const float &lep2_dphiGenMET();
  const float &lep2_dphiGenMET_rl();
  const vector<float> &ph_sigmaIEtaEta_fill5x5();
  const vector<float> &ph_hOverE();
  const vector<float> &ph_r9();
  const vector<float> &ph_chiso();
  const vector<float> &ph_nhiso();
  const vector<float> &ph_phiso();
  const vector<bool> &ph_passLooseID();
  const vector<bool> &ph_passMediumID();
  const vector<bool> &ph_passTightID();
  const vector<int> &ph_overlapJetId();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ph_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ph_mcp4();
  const vector<int> &ph_mcMatchId();
  const vector<float> &ph_genIso04();
  const vector<float> &ph_drMinParton();
  const int &nskimjets();
  const int &nskimbtagmed();
  const int &nskimbtagloose();
  const int &nskimbtagtight();
  const int &ngoodjets();
  const int &ngoodbtags();
  const int &nloosebtags();
  const int &ntightbtags();
  const int &nanalysisbtags();
  const int &nfailjets();
  const float &ak4_HT();
  const float &ak4_HTeta5();
  const float &ak4_MHT_pt();
  const float &ak4_MHT_phi();
  const float &ak4_htratiom();
  const vector<float> &dphi_ak4pfjet_met();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak4pfjets_p4();
  const vector<bool> &ak4pfjets_passMEDbtag();
  const vector<float> &ak4pfjets_deepCSV();
  const vector<float> &ak4pfjets_CSV();
  const vector<float> &ak4pfjets_mva();
  const vector<int> &ak4pfjets_parton_flavor();
  const vector<int> &ak4pfjets_hadron_flavor();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjets_leadMEDbjet_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjets_leadbtag_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak4genjets_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &softtags_p4();
  const int &nsoftbtags();
  const int &jup_nskimjets();
  const int &jup_nskimbtagmed();
  const int &jup_nskimbtagloose();
  const int &jup_nskimbtagtight();
  const int &jup_ngoodjets();
  const int &jup_ngoodbtags();
  const int &jup_nloosebtags();
  const int &jup_ntightbtags();
  const int &jup_nanalysisbtags();
  const int &jup_nfailjets();
  const float &jup_ak4_HT();
  const float &jup_ak4_HTeta5();
  const float &jup_ak4_MHT_pt();
  const float &jup_ak4_MHT_phi();
  const float &jup_ak4_htratiom();
  const vector<float> &jup_dphi_ak4pfjet_met();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_ak4pfjets_p4();
  const vector<bool> &jup_ak4pfjets_passMEDbtag();
  const vector<float> &jup_ak4pfjets_deepCSV();
  const vector<float> &jup_ak4pfjets_CSV();
  const vector<float> &jup_ak4pfjets_mva();
  const vector<int> &jup_ak4pfjets_parton_flavor();
  const vector<int> &jup_ak4pfjets_hadron_flavor();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jup_ak4pfjets_leadMEDbjet_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jup_ak4pfjets_leadbtag_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_ak4genjets_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_softtags_p4();
  const int &jup_nsoftbtags();
  const int &jdown_nskimjets();
  const int &jdown_nskimbtagmed();
  const int &jdown_nskimbtagloose();
  const int &jdown_nskimbtagtight();
  const int &jdown_ngoodjets();
  const int &jdown_ngoodbtags();
  const int &jdown_nloosebtags();
  const int &jdown_ntightbtags();
  const int &jdown_nanalysisbtags();
  const int &jdown_nfailjets();
  const float &jdown_ak4_HT();
  const float &jdown_ak4_HTeta5();
  const float &jdown_ak4_MHT_pt();
  const float &jdown_ak4_MHT_phi();
  const float &jdown_ak4_htratiom();
  const vector<float> &jdown_dphi_ak4pfjet_met();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_ak4pfjets_p4();
  const vector<bool> &jdown_ak4pfjets_passMEDbtag();
  const vector<float> &jdown_ak4pfjets_deepCSV();
  const vector<float> &jdown_ak4pfjets_CSV();
  const vector<float> &jdown_ak4pfjets_mva();
  const vector<int> &jdown_ak4pfjets_parton_flavor();
  const vector<int> &jdown_ak4pfjets_hadron_flavor();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jdown_ak4pfjets_leadMEDbjet_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jdown_ak4pfjets_leadbtag_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_ak4genjets_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_softtags_p4();
  const int &jdown_nsoftbtags();
  const vector<bool> &genleps_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genleps_p4();
  const vector<int> &genleps_id();
  const vector<int> &genleps__genpsidx();
  const vector<int> &genleps_status();
  const vector<bool> &genleps_fromHardProcessDecayed();
  const vector<bool> &genleps_fromHardProcessFinalState();
  const vector<bool> &genleps_isHardProcess();
  const vector<bool> &genleps_isLastCopy();
  const vector<int> &genleps_gentaudecay();
  const int &gen_nfromtleps_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genleps_motherp4();
  const vector<int> &genleps_motherid();
  const vector<int> &genleps_motheridx();
  const vector<int> &genleps_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genleps_gmotherp4();
  const vector<int> &genleps_gmotherid();
  const vector<int> &genleps_gmotheridx();
  const vector<int> &genleps_gmotherstatus();
  const vector<bool> &gennus_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennus_p4();
  const vector<int> &gennus_id();
  const vector<int> &gennus__genpsidx();
  const vector<int> &gennus_status();
  const vector<bool> &gennus_fromHardProcessDecayed();
  const vector<bool> &gennus_fromHardProcessFinalState();
  const vector<bool> &gennus_isHardProcess();
  const vector<bool> &gennus_isLastCopy();
  const vector<int> &gennus_gentaudecay();
  const int &gen_nfromtnus_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennus_motherp4();
  const vector<int> &gennus_motherid();
  const vector<int> &gennus_motheridx();
  const vector<int> &gennus_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennus_gmotherp4();
  const vector<int> &gennus_gmotherid();
  const vector<int> &gennus_gmotheridx();
  const vector<int> &gennus_gmotherstatus();
  const vector<bool> &genqs_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_p4();
  const vector<int> &genqs_id();
  const vector<int> &genqs__genpsidx();
  const vector<int> &genqs_status();
  const vector<bool> &genqs_fromHardProcessDecayed();
  const vector<bool> &genqs_fromHardProcessFinalState();
  const vector<bool> &genqs_isHardProcess();
  const vector<bool> &genqs_isLastCopy();
  const vector<int> &genqs_gentaudecay();
  const int &gen_nfromtqs_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_motherp4();
  const vector<int> &genqs_motherid();
  const vector<int> &genqs_motheridx();
  const vector<int> &genqs_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_gmotherp4();
  const vector<int> &genqs_gmotherid();
  const vector<int> &genqs_gmotheridx();
  const vector<int> &genqs_gmotherstatus();
  const vector<bool> &genbosons_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbosons_p4();
  const vector<int> &genbosons_id();
  const vector<int> &genbosons__genpsidx();
  const vector<int> &genbosons_status();
  const vector<bool> &genbosons_fromHardProcessDecayed();
  const vector<bool> &genbosons_fromHardProcessFinalState();
  const vector<bool> &genbosons_isHardProcess();
  const vector<bool> &genbosons_isLastCopy();
  const vector<int> &genbosons_gentaudecay();
  const int &gen_nfromtbosons_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbosons_motherp4();
  const vector<int> &genbosons_motherid();
  const vector<int> &genbosons_motheridx();
  const vector<int> &genbosons_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbosons_gmotherp4();
  const vector<int> &genbosons_gmotherid();
  const vector<int> &genbosons_gmotheridx();
  const vector<int> &genbosons_gmotherstatus();
  const vector<bool> &gensusy_isfromt();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gensusy_p4();
  const vector<int> &gensusy_id();
  const vector<int> &gensusy__genpsidx();
  const vector<int> &gensusy_status();
  const vector<bool> &gensusy_fromHardProcessDecayed();
  const vector<bool> &gensusy_fromHardProcessFinalState();
  const vector<bool> &gensusy_isHardProcess();
  const vector<bool> &gensusy_isLastCopy();
  const vector<int> &gensusy_gentaudecay();
  const int &gen_nfromtsusy_();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gensusy_motherp4();
  const vector<int> &gensusy_motherid();
  const vector<int> &gensusy_motheridx();
  const vector<int> &gensusy_motherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gensusy_gmotherp4();
  const vector<int> &gensusy_gmotherid();
  const vector<int> &gensusy_gmotheridx();
  const vector<int> &gensusy_gmotherstatus();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak8pfjets_p4();
  const vector<float> &ak8pfjets_tau1();
  const vector<float> &ak8pfjets_tau2();
  const vector<float> &ak8pfjets_tau3();
  const vector<int> &ak8pfjets_parton_flavor();
  const int &nGoodAK8PFJets();
  const vector<float> &ak8pfjets_deepdisc_qcd();
  const vector<float> &ak8pfjets_deepdisc_top();
  const vector<float> &ak8pfjets_deepdisc_w();
  const vector<float> &ak8pfjets_deepdisc_z();
  const vector<float> &ak8pfjets_deepdisc_zbb();
  const vector<float> &ak8pfjets_deepdisc_hbb();
  const vector<float> &ak8pfjets_deepdisc_h4q();
  const float &lead_ak8deepdisc_top();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_ak8pfjets_p4();
  const vector<float> &jup_ak8pfjets_tau1();
  const vector<float> &jup_ak8pfjets_tau2();
  const vector<float> &jup_ak8pfjets_tau3();
  const vector<int> &jup_ak8pfjets_parton_flavor();
  const int &jup_nGoodAK8PFJets();
  const vector<float> &jup_ak8pfjets_deepdisc_qcd();
  const vector<float> &jup_ak8pfjets_deepdisc_top();
  const vector<float> &jup_ak8pfjets_deepdisc_w();
  const vector<float> &jup_ak8pfjets_deepdisc_z();
  const vector<float> &jup_ak8pfjets_deepdisc_zbb();
  const vector<float> &jup_ak8pfjets_deepdisc_hbb();
  const vector<float> &jup_ak8pfjets_deepdisc_h4q();
  const float &jup_lead_ak8deepdisc_top();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_ak8pfjets_p4();
  const vector<float> &jdown_ak8pfjets_tau1();
  const vector<float> &jdown_ak8pfjets_tau2();
  const vector<float> &jdown_ak8pfjets_tau3();
  const vector<int> &jdown_ak8pfjets_parton_flavor();
  const int &jdown_nGoodAK8PFJets();
  const vector<float> &jdown_ak8pfjets_deepdisc_qcd();
  const vector<float> &jdown_ak8pfjets_deepdisc_top();
  const vector<float> &jdown_ak8pfjets_deepdisc_w();
  const vector<float> &jdown_ak8pfjets_deepdisc_z();
  const vector<float> &jdown_ak8pfjets_deepdisc_zbb();
  const vector<float> &jdown_ak8pfjets_deepdisc_hbb();
  const vector<float> &jdown_ak8pfjets_deepdisc_h4q();
  const float &jdown_lead_ak8deepdisc_top();
  const vector<float> &ak4pfjets_cvsl();
  const vector<float> &ak4pfjets_ptD();
  const vector<float> &ak4pfjets_axis1();
  const vector<float> &ak4pfjets_axis2();
  const vector<int> &ak4pfjets_mult();
  const vector<float> &ak4pfjets_deepCSVb();
  const vector<float> &ak4pfjets_deepCSVbb();
  const vector<float> &ak4pfjets_deepCSVc();
  const vector<float> &ak4pfjets_deepCSVl();
  const vector<vector<int> > &topcands_ak4idx();
  const vector<float> &topcands_disc();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &topcands_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &topcands_Wp4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &tftops_p4();
  const vector<float> &tftops_disc();
  const vector<vector<float> > &tftops_subjet_pt();
  const vector<vector<float> > &tftops_subjet_eta();
  const vector<vector<float> > &tftops_subjet_phi();
  const vector<float> &jup_ak4pfjets_cvsl();
  const vector<float> &jup_ak4pfjets_ptD();
  const vector<float> &jup_ak4pfjets_axis1();
  const vector<float> &jup_ak4pfjets_axis2();
  const vector<int> &jup_ak4pfjets_mult();
  const vector<float> &jup_ak4pfjets_deepCSVb();
  const vector<float> &jup_ak4pfjets_deepCSVbb();
  const vector<float> &jup_ak4pfjets_deepCSVc();
  const vector<float> &jup_ak4pfjets_deepCSVl();
  const vector<vector<int> > &jup_topcands_ak4idx();
  const vector<float> &jup_topcands_disc();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_topcands_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_topcands_Wp4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jup_tftops_p4();
  const vector<float> &jup_tftops_disc();
  const vector<vector<float> > &jup_tftops_subjet_pt();
  const vector<vector<float> > &jup_tftops_subjet_eta();
  const vector<vector<float> > &jup_tftops_subjet_phi();
  const vector<float> &jdown_ak4pfjets_cvsl();
  const vector<float> &jdown_ak4pfjets_ptD();
  const vector<float> &jdown_ak4pfjets_axis1();
  const vector<float> &jdown_ak4pfjets_axis2();
  const vector<int> &jdown_ak4pfjets_mult();
  const vector<float> &jdown_ak4pfjets_deepCSVb();
  const vector<float> &jdown_ak4pfjets_deepCSVbb();
  const vector<float> &jdown_ak4pfjets_deepCSVc();
  const vector<float> &jdown_ak4pfjets_deepCSVl();
  const vector<vector<int> > &jdown_topcands_ak4idx();
  const vector<float> &jdown_topcands_disc();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_topcands_p4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_topcands_Wp4();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jdown_tftops_p4();
  const vector<float> &jdown_tftops_disc();
  const vector<vector<float> > &jdown_tftops_subjet_pt();
  const vector<vector<float> > &jdown_tftops_subjet_eta();
  const vector<vector<float> > &jdown_tftops_subjet_phi();
  const float &pfmet_uncorr_jup();
  const float &pfmet_uncorr_phi_jup();
  const float &pfmet_uncorr_jdown();
  const float &pfmet_uncorr_phi_jdown();
  const float &pfmet_resup();
  const float &pfmet_phi_resup();
  const float &pfmet_resdown();
  const float &pfmet_phi_resdown();
  const float &pfmet_rl_resup();
  const float &pfmet_phi_rl_resup();
  const float &pfmet_rl_resdown();
  const float &mt_met_lep_resup();
  const float &mt_met_lep_rl_resup();
  const float &mt_met_lep_resdown();
  const float &mt_met_lep_rl_resdown();
  const float &topnessMod_resup();
  const float &topnessMod_rl_resup();
  const float &topnessMod_resdown();
  const float &topnessMod_rl_resdown();
  const float &mindphi_met_j1_j2_resup();
  const float &mindphi_met_j1_j2_rl_resup();
  const float &mindphi_met_j1_j2_resdown();
  const float &mindphi_met_j1_j2_rl_resdown();
  const float &MT2_ll_resup();
  const float &MT2_ll_resdown();
  const float &genmet_rl();
  const float &genmet_phi_rl();
  const float &topnessMod_genmet();
  const float &topnessMod_rl_genmet();
  const float &mt_genmet_lep();
  const float &mt_genmet_lep_rl();
  const float &mindphi_genmet_j1_j2();
  const float &mindphi_genmet_j1_j2_rl();
  const float &MT2_ll_genmet();
  const bool &filt_cscbeamhalo();
  const bool &filt_cscbeamhalo2015();
  const bool &filt_globaltighthalo2016();
  const bool &filt_globalsupertighthalo2016();
  const bool &filt_ecallaser();
  const bool &filt_ecaltp();
  const bool &filt_ecalbadcalib();
  const bool &filt_eebadsc();
  const bool &filt_goodvtx();
  const bool &filt_badevents();
  const bool &filt_hbhenoise();
  const bool &filt_hbheisonoise();
  const bool &filt_hcallaser();
  const bool &filt_trkfail();
  const bool &filt_trkPOG();
  const bool &filt_trkPOG_logerr_tmc();
  const bool &filt_trkPOG_tmc();
  const bool &filt_trkPOG_tms();
  const int &firstGoodVtxIdx();
  const bool &filt_badChargedCandidateFilter();
  const bool &filt_badMuonFilter();
  const bool &filt_met();
  const bool &filt_fastsimjets();
  const bool &filt_fastsimjets_jup();
  const bool &filt_fastsimjets_jdown();
  const bool &filt_jetWithBadMuon();
  const bool &filt_jetWithBadMuon_jup();
  const bool &filt_jetWithBadMuon_jdown();
  const bool &filt_pfovercalomet();
  const bool &filt_badmuons();
  const bool &filt_duplicatemuons();
  const bool &filt_nobadmuons();
  const float &dR_lep_leadb();
  const float &dphi_Wlep();
  const float &MET_over_sqrtHT();
  const float &MT2_lb_b();
  const float &MT2_lb_b_mass();
  const float &MT2_lb_bqq();
  const float &MT2_lb_bqq_mass();
  const float &Mjjj();
  const float &Mjjj_lep2();
  const float &MT2_had();
  const float &MT2_had_genmet();
  const float &MT2_had_jup();
  const float &MT2_had_jdown();
  const float &mht_pt();
  const float &mht_pt_jup();
  const float &mht_pt_jdown();
  const float &mht_phi();
  const float &mht_phi_jup();
  const float &mht_phi_jdown();
  const float &pfmet_egclean();
  const float &pfmet_egclean_phi();
  const float &pfmet_muegclean();
  const float &pfmet_muegclean_phi();
  const float &pfmet_muegcleanfix();
  const float &pfmet_muegcleanfix_phi();
}
#endif
